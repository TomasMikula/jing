package jing.openapi.examples.petstore.server

import jing.openapi.examples.petstore.api

import jing.openapi.server.http4s.Http4sServerBuilder

object PetstoreServerHttp4s extends App {

  val serverBuilder =
    api
      .endpointList
      .interpret(using Http4sServerBuilder.forIO)

  serverBuilder
    .handleNext["/pet_POST"](???)
    .handleNext["/pet_PUT"](???)
    .handleNext["/pet/findByStatus_GET"](???)
    .handleNext(???)
    .handleNext(???)
    .handleNext(???)
    .handleNext(???)
    .handleNext(???)
    .handleNext(???)
    .handleNext(???)
    .handleNext(???)
    .handleNext(???)
    .handleNext(???)
    .handleNext(???)
    .handleNext(???)
    .handleNext(???)
    .handleNext(???)
    .handleNext(???)
    .handleNext(???)
    .end

  def alternative_endpointNamesAsValues =
    serverBuilder
      .handle("/pet_POST")(???)
      .handle("/pet_PUT")(???)
      .handle("/pet/findByStatus_GET")(???)
      .handle(???)(???)
      .handle(???)(???)
      .handle(???)(???)
      .handle(???)(???)
      .handle(???)(???)
      .handle(???)(???)
      .handle(???)(???)
      .handle(???)(???)
      .handle(???)(???)
      .handle(???)(???)
      .handle(???)(???)
      .handle(???)(???)
      .handle(???)(???)
      .handle(???)(???)
      .handle(???)(???)
      .handle(???)(???)
      .end

  def alternative_direct =
    serverBuilder
      .next["/pet_POST"](???)
      .next["/pet_PUT"](???)
      .next["/pet/findByStatus_GET"](???)
      .next(???)
      .next(???)
      .next(???)
      .next(???)
      .next(???)
      .next(???)
      .next(???)
      .next(???)
      .next(???)
      .next(???)
      .next(???)
      .next(???)
      .next(???)
      .next(???)
      .next(???)
      .next(???)
      .end


  def alternative_directEndpointNamesAsValues =
    serverBuilder
      .on("/pet_POST")(???)
      .on("/pet_PUT")(???)
      .on("/pet/findByStatus_GET")(???)
      .on(???)(???)
      .on(???)(???)
      .on(???)(???)
      .on(???)(???)
      .on(???)(???)
      .on(???)(???)
      .on(???)(???)
      .on(???)(???)
      .on(???)(???)
      .on(???)(???)
      .on(???)(???)
      .on(???)(???)
      .on(???)(???)
      .on(???)(???)
      .on(???)(???)
      .on(???)(???)
      .end

  def alternative_namedTuple =
    serverBuilder.withRequestHandlersTuple(
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
    )

  def alternative_nAryFunction =
    serverBuilder.withRequestHandlers(
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
    )

  def alternative_nAryMethod =
    serverBuilder.implementRequestHandlers(
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
      ???,
    )
}
