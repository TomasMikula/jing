{
  "openapi": "3.0.3",
  "info": {
    "version": "1.1.4",
    "title": "GitHub v3 REST API",
    "description": "A *tiny* fraction of GitHub's v3 REST API, downloaded on 2025-08-31 from https://raw.githubusercontent.com/github/rest-api-description/refs/heads/main/descriptions/api.github.com/api.github.com.json",
    "license": {
      "name": "MIT",
      "url": "https://spdx.org/licenses/MIT"
    },
    "termsOfService": "https://docs.github.com/articles/github-terms-of-service",
    "contact": {
      "name": "Support",
      "url": "https://support.github.com/contact?tags=dotcom-rest-api"
    },
    "x-github-plan": "api.github.com"
  },
  "tags": [
    {
      "name": "actions",
      "description": "Endpoints to manage GitHub Actions using the REST API."
    },
    {
      "name": "activity",
      "description": "Activity APIs provide access to notifications, subscriptions, and timelines."
    },
    {
      "name": "apps",
      "description": "Information for integrations and installations."
    },
    {
      "name": "billing",
      "description": "Monitor charges and usage from Actions and Packages."
    },
    {
      "name": "checks",
      "description": "Rich interactions with checks run by your integrations."
    },
    {
      "name": "code-scanning",
      "description": "Retrieve code scanning alerts from a repository."
    },
    {
      "name": "codes-of-conduct",
      "description": "Insight into codes of conduct for your communities."
    },
    {
      "name": "emojis",
      "description": "List emojis available to use on GitHub."
    },
    {
      "name": "dependabot",
      "description": "Endpoints to manage Dependabot."
    },
    {
      "name": "dependency-graph",
      "description": "Endpoints to access Dependency Graph features."
    },
    {
      "name": "gists",
      "description": "View, modify your gists."
    },
    {
      "name": "git",
      "description": "Raw Git functionality."
    },
    {
      "name": "gitignore",
      "description": "View gitignore templates"
    },
    {
      "name": "issues",
      "description": "Interact with GitHub Issues."
    },
    {
      "name": "licenses",
      "description": "View various OSS licenses."
    },
    {
      "name": "markdown",
      "description": "Render GitHub flavored markdown"
    },
    {
      "name": "merge-queue",
      "description": "Interact with GitHub Merge Queues."
    },
    {
      "name": "meta",
      "description": "Endpoints that give information about the API."
    },
    {
      "name": "migrations",
      "description": "Move projects to or from GitHub."
    },
    {
      "name": "oidc",
      "description": "Endpoints to manage GitHub OIDC configuration using the REST API."
    },
    {
      "name": "orgs",
      "description": "Interact with GitHub Orgs."
    },
    {
      "name": "packages",
      "description": "Manage packages for authenticated users and organizations."
    },
    {
      "name": "projects-classic",
      "description": "Interact with GitHub Projects (classic)."
    },
    {
      "name": "pulls",
      "description": "Interact with GitHub Pull Requests."
    },
    {
      "name": "rate-limit",
      "description": "Check your current rate limit status"
    },
    {
      "name": "reactions",
      "description": "Interact with reactions to various GitHub entities."
    },
    {
      "name": "repos",
      "description": "Interact with GitHub Repos."
    },
    {
      "name": "search",
      "description": "Look for stuff on GitHub."
    },
    {
      "name": "secret-scanning",
      "description": "Retrieve secret scanning alerts from a repository."
    },
    {
      "name": "teams",
      "description": "Interact with GitHub Teams."
    },
    {
      "name": "users",
      "description": "Interact with and view information about users and also current user."
    },
    {
      "name": "codespaces",
      "description": "Endpoints to manage Codespaces using the REST API."
    },
    {
      "name": "copilot",
      "description": "Endpoints to manage Copilot using the REST API."
    },
    {
      "name": "security-advisories",
      "description": "Manage security advisories."
    },
    {
      "name": "interactions",
      "description": "Owner or admin management of users interactions."
    },
    {
      "name": "classroom",
      "description": "Interact with GitHub Classroom."
    },
    {
      "name": "desktop",
      "description": "Desktop specific endpoints."
    },
    {
      "name": "enterprise-teams",
      "description": "Endpoints to manage GitHub Enterprise Teams."
    },
    {
      "name": "code-security",
      "description": "Endpoints to manage Code security using the REST API."
    },
    {
      "name": "private-registries",
      "description": "Manage private registry configurations."
    },
    {
      "name": "hosted-compute",
      "description": "Manage hosted compute networking resources."
    },
    {
      "name": "credentials",
      "description": "Revoke compromised or leaked GitHub credentials."
    },
    {
      "name": "campaigns",
      "description": "Endpoints to manage campaigns via the REST API."
    },
    {
      "name": "projects",
      "description": "Endpoints to manage Projects using the REST API."
    }
  ],
  "servers": [
    {
      "url": "https://api.github.com"
    }
  ],
  "externalDocs": {
    "description": "GitHub v3 REST API",
    "url": "https://docs.github.com/rest/"
  },
  "paths": {},
  "components": {
    "schemas": {
      "root": {
        "type": "object",
        "properties": {
          "current_user_url": {
            "type": "string",
            "format": "uri-template"
          },
          "current_user_authorizations_html_url": {
            "type": "string",
            "format": "uri-template"
          },
          "authorizations_url": {
            "type": "string",
            "format": "uri-template"
          },
          "code_search_url": {
            "type": "string",
            "format": "uri-template"
          },
          "commit_search_url": {
            "type": "string",
            "format": "uri-template"
          },
          "emails_url": {
            "type": "string",
            "format": "uri-template"
          },
          "emojis_url": {
            "type": "string",
            "format": "uri-template"
          },
          "events_url": {
            "type": "string",
            "format": "uri-template"
          },
          "feeds_url": {
            "type": "string",
            "format": "uri-template"
          },
          "followers_url": {
            "type": "string",
            "format": "uri-template"
          },
          "following_url": {
            "type": "string",
            "format": "uri-template"
          },
          "gists_url": {
            "type": "string",
            "format": "uri-template"
          },
          "hub_url": {
            "type": "string",
            "format": "uri-template",
            "deprecated": true
          },
          "issue_search_url": {
            "type": "string",
            "format": "uri-template"
          },
          "issues_url": {
            "type": "string",
            "format": "uri-template"
          },
          "keys_url": {
            "type": "string",
            "format": "uri-template"
          },
          "label_search_url": {
            "type": "string",
            "format": "uri-template"
          },
          "notifications_url": {
            "type": "string",
            "format": "uri-template"
          },
          "organization_url": {
            "type": "string",
            "format": "uri-template"
          },
          "organization_repositories_url": {
            "type": "string",
            "format": "uri-template"
          },
          "organization_teams_url": {
            "type": "string",
            "format": "uri-template"
          },
          "public_gists_url": {
            "type": "string",
            "format": "uri-template"
          },
          "rate_limit_url": {
            "type": "string",
            "format": "uri-template"
          },
          "repository_url": {
            "type": "string",
            "format": "uri-template"
          },
          "repository_search_url": {
            "type": "string",
            "format": "uri-template"
          },
          "current_user_repositories_url": {
            "type": "string",
            "format": "uri-template"
          },
          "starred_url": {
            "type": "string",
            "format": "uri-template"
          },
          "starred_gists_url": {
            "type": "string",
            "format": "uri-template"
          },
          "topic_search_url": {
            "type": "string",
            "format": "uri-template"
          },
          "user_url": {
            "type": "string",
            "format": "uri-template"
          },
          "user_organizations_url": {
            "type": "string",
            "format": "uri-template"
          },
          "user_repositories_url": {
            "type": "string",
            "format": "uri-template"
          },
          "user_search_url": {
            "type": "string",
            "format": "uri-template"
          }
        },
        "required": [
          "current_user_url",
          "current_user_authorizations_html_url",
          "authorizations_url",
          "code_search_url",
          "commit_search_url",
          "emails_url",
          "emojis_url",
          "events_url",
          "feeds_url",
          "followers_url",
          "following_url",
          "gists_url",
          "issue_search_url",
          "issues_url",
          "keys_url",
          "label_search_url",
          "notifications_url",
          "organization_url",
          "organization_repositories_url",
          "organization_teams_url",
          "public_gists_url",
          "rate_limit_url",
          "repository_url",
          "repository_search_url",
          "current_user_repositories_url",
          "starred_url",
          "starred_gists_url",
          "user_url",
          "user_organizations_url",
          "user_repositories_url",
          "user_search_url"
        ]
      },
      "security-advisory-ecosystems": {
        "type": "string",
        "description": "The package's language or package management ecosystem.",
        "enum": [
          "rubygems",
          "npm",
          "pip",
          "maven",
          "nuget",
          "composer",
          "go",
          "rust",
          "erlang",
          "actions",
          "pub",
          "other",
          "swift"
        ]
      },
      "vulnerability": {
        "description": "A vulnerability describing the product and its affected versions within a GitHub Security Advisory.",
        "type": "object",
        "properties": {
          "package": {
            "description": "The name of the package affected by the vulnerability.",
            "type": "object",
            "nullable": true,
            "properties": {
              "ecosystem": {
                "$ref": "#/components/schemas/security-advisory-ecosystems"
              },
              "name": {
                "type": "string",
                "description": "The unique package name within its ecosystem.",
                "nullable": true
              }
            },
            "required": [
              "ecosystem",
              "name"
            ]
          },
          "vulnerable_version_range": {
            "type": "string",
            "description": "The range of the package versions affected by the vulnerability.",
            "nullable": true
          },
          "first_patched_version": {
            "type": "string",
            "description": "The package version that resolves the vulnerability.",
            "nullable": true
          },
          "vulnerable_functions": {
            "type": "array",
            "description": "The functions in the package that are affected by the vulnerability.",
            "nullable": true,
            "readOnly": true,
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "package",
          "vulnerable_version_range",
          "first_patched_version",
          "vulnerable_functions"
        ]
      },
      "cvss-severities": {
        "type": "object",
        "nullable": true,
        "properties": {
          "cvss_v3": {
            "type": "object",
            "nullable": true,
            "properties": {
              "vector_string": {
                "type": "string",
                "description": "The CVSS 3 vector string.",
                "nullable": true
              },
              "score": {
                "type": "number",
                "description": "The CVSS 3 score.",
                "minimum": 0,
                "maximum": 10,
                "nullable": true,
                "readOnly": true
              }
            },
            "required": [
              "vector_string",
              "score"
            ]
          },
          "cvss_v4": {
            "type": "object",
            "nullable": true,
            "properties": {
              "vector_string": {
                "type": "string",
                "description": "The CVSS 4 vector string.",
                "nullable": true
              },
              "score": {
                "type": "number",
                "description": "The CVSS 4 score.",
                "minimum": 0,
                "maximum": 10,
                "nullable": true,
                "readOnly": true
              }
            },
            "required": [
              "vector_string",
              "score"
            ]
          }
        }
      },
      "security-advisory-epss": {
        "type": "object",
        "nullable": true,
        "readOnly": true,
        "description": "The EPSS scores as calculated by the [Exploit Prediction Scoring System](https://www.first.org/epss).",
        "properties": {
          "percentage": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          },
          "percentile": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          }
        }
      },
      "simple-user": {
        "title": "Simple User",
        "description": "A GitHub user.",
        "type": "object",
        "properties": {
          "name": {
            "nullable": true,
            "type": "string"
          },
          "email": {
            "nullable": true,
            "type": "string"
          },
          "login": {
            "type": "string",
            "example": "octocat"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "node_id": {
            "type": "string",
            "example": "MDQ6VXNlcjE="
          },
          "avatar_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/images/error/octocat_happy.gif"
          },
          "gravatar_id": {
            "type": "string",
            "example": "41d064eb2195891e12d0413f63227ea7",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat"
          },
          "followers_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/followers"
          },
          "following_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/following{/other_user}"
          },
          "gists_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/gists{/gist_id}"
          },
          "starred_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
          },
          "subscriptions_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/subscriptions"
          },
          "organizations_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/orgs"
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/repos"
          },
          "events_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/events{/privacy}"
          },
          "received_events_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/received_events"
          },
          "type": {
            "type": "string",
            "example": "User"
          },
          "site_admin": {
            "type": "boolean"
          },
          "starred_at": {
            "type": "string",
            "example": "\"2020-07-09T00:17:55Z\""
          },
          "user_view_type": {
            "type": "string",
            "example": "public"
          }
        },
        "required": [
          "avatar_url",
          "events_url",
          "followers_url",
          "following_url",
          "gists_url",
          "gravatar_id",
          "html_url",
          "id",
          "node_id",
          "login",
          "organizations_url",
          "received_events_url",
          "repos_url",
          "site_admin",
          "starred_url",
          "subscriptions_url",
          "type",
          "url"
        ]
      },
      "security-advisory-credit-types": {
        "type": "string",
        "description": "The type of credit the user is receiving.",
        "enum": [
          "analyst",
          "finder",
          "reporter",
          "coordinator",
          "remediation_developer",
          "remediation_reviewer",
          "remediation_verifier",
          "tool",
          "sponsor",
          "other"
        ]
      },
      "global-advisory": {
        "description": "A GitHub Security Advisory.",
        "type": "object",
        "properties": {
          "ghsa_id": {
            "type": "string",
            "description": "The GitHub Security Advisory ID.",
            "readOnly": true
          },
          "cve_id": {
            "type": "string",
            "description": "The Common Vulnerabilities and Exposures (CVE) ID.",
            "nullable": true,
            "readOnly": true
          },
          "url": {
            "type": "string",
            "description": "The API URL for the advisory.",
            "readOnly": true
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "description": "The URL for the advisory.",
            "readOnly": true
          },
          "repository_advisory_url": {
            "type": "string",
            "format": "uri",
            "description": "The API URL for the repository advisory.",
            "readOnly": true,
            "nullable": true
          },
          "summary": {
            "type": "string",
            "description": "A short summary of the advisory.",
            "maxLength": 1024
          },
          "description": {
            "type": "string",
            "description": "A detailed description of what the advisory entails.",
            "maxLength": 65535,
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "The type of advisory.",
            "readOnly": true,
            "enum": [
              "reviewed",
              "unreviewed",
              "malware"
            ]
          },
          "severity": {
            "type": "string",
            "description": "The severity of the advisory.",
            "enum": [
              "critical",
              "high",
              "medium",
              "low",
              "unknown"
            ]
          },
          "source_code_location": {
            "type": "string",
            "format": "uri",
            "description": "The URL of the advisory's source code.",
            "nullable": true
          },
          "identifiers": {
            "type": "array",
            "nullable": true,
            "readOnly": true,
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The type of identifier.",
                  "enum": [
                    "CVE",
                    "GHSA"
                  ]
                },
                "value": {
                  "type": "string",
                  "description": "The identifier value."
                }
              },
              "required": [
                "type",
                "value"
              ]
            }
          },
          "references": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "description": "URLs with more information regarding the advisory."
            }
          },
          "published_at": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time of when the advisory was published, in ISO 8601 format.",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time of when the advisory was last updated, in ISO 8601 format.",
            "readOnly": true
          },
          "github_reviewed_at": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time of when the advisory was reviewed by GitHub, in ISO 8601 format.",
            "readOnly": true,
            "nullable": true
          },
          "nvd_published_at": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the advisory was published in the National Vulnerability Database, in ISO 8601 format.\nThis field is only populated when the advisory is imported from the National Vulnerability Database.",
            "readOnly": true,
            "nullable": true
          },
          "withdrawn_at": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time of when the advisory was withdrawn, in ISO 8601 format.",
            "readOnly": true,
            "nullable": true
          },
          "vulnerabilities": {
            "type": "array",
            "description": "The products and respective version ranges affected by the advisory.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/vulnerability"
            }
          },
          "cvss": {
            "type": "object",
            "nullable": true,
            "properties": {
              "vector_string": {
                "type": "string",
                "description": "The CVSS vector.",
                "nullable": true
              },
              "score": {
                "type": "number",
                "description": "The CVSS score.",
                "minimum": 0,
                "maximum": 10,
                "nullable": true,
                "readOnly": true
              }
            },
            "required": [
              "vector_string",
              "score"
            ]
          },
          "cvss_severities": {
            "$ref": "#/components/schemas/cvss-severities"
          },
          "epss": {
            "$ref": "#/components/schemas/security-advisory-epss"
          },
          "cwes": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "object",
              "properties": {
                "cwe_id": {
                  "type": "string",
                  "description": "The Common Weakness Enumeration (CWE) identifier."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the CWE.",
                  "readOnly": true
                }
              },
              "required": [
                "cwe_id",
                "name"
              ]
            }
          },
          "credits": {
            "type": "array",
            "description": "The users who contributed to the advisory.",
            "nullable": true,
            "readOnly": true,
            "items": {
              "type": "object",
              "properties": {
                "user": {
                  "$ref": "#/components/schemas/simple-user"
                },
                "type": {
                  "$ref": "#/components/schemas/security-advisory-credit-types"
                }
              },
              "required": [
                "user",
                "type"
              ]
            }
          }
        },
        "required": [
          "ghsa_id",
          "cve_id",
          "url",
          "html_url",
          "repository_advisory_url",
          "summary",
          "description",
          "type",
          "severity",
          "source_code_location",
          "identifiers",
          "references",
          "published_at",
          "updated_at",
          "github_reviewed_at",
          "nvd_published_at",
          "withdrawn_at",
          "vulnerabilities",
          "cvss",
          "cwes",
          "credits"
        ],
        "additionalProperties": false
      },
      "basic-error": {
        "title": "Basic Error",
        "description": "Basic Error",
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "documentation_url": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "validation-error-simple": {
        "title": "Validation Error Simple",
        "description": "Validation Error Simple",
        "type": "object",
        "required": [
          "message",
          "documentation_url"
        ],
        "properties": {
          "message": {
            "type": "string"
          },
          "documentation_url": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "enterprise": {
        "title": "Enterprise",
        "description": "An enterprise on GitHub.",
        "type": "object",
        "properties": {
          "description": {
            "description": "A short description of the enterprise.",
            "type": "string",
            "nullable": true
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/enterprises/octo-business"
          },
          "website_url": {
            "description": "The enterprise's website URL.",
            "type": "string",
            "nullable": true,
            "format": "uri"
          },
          "id": {
            "description": "Unique identifier of the enterprise",
            "example": 42,
            "type": "integer"
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
          },
          "name": {
            "description": "The name of the enterprise.",
            "type": "string",
            "example": "Octo Business"
          },
          "slug": {
            "description": "The slug url identifier for the enterprise.",
            "type": "string",
            "example": "octo-business"
          },
          "created_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "example": "2019-01-26T19:01:12Z"
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "example": "2019-01-26T19:14:43Z"
          },
          "avatar_url": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "id",
          "node_id",
          "name",
          "slug",
          "html_url",
          "created_at",
          "updated_at",
          "avatar_url"
        ]
      },
      "integration": {
        "title": "GitHub app",
        "description": "GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.",
        "type": "object",
        "nullable": true,
        "properties": {
          "id": {
            "description": "Unique identifier of the GitHub app",
            "example": 37,
            "type": "integer"
          },
          "slug": {
            "description": "The slug name of the GitHub app",
            "example": "probot-owners",
            "type": "string"
          },
          "node_id": {
            "type": "string",
            "example": "MDExOkludGVncmF0aW9uMQ=="
          },
          "client_id": {
            "type": "string",
            "example": "\"Iv1.25b5d1e65ffc4022\""
          },
          "owner": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/simple-user"
              },
              {
                "$ref": "#/components/schemas/enterprise"
              }
            ]
          },
          "name": {
            "description": "The name of the GitHub app",
            "example": "Probot Owners",
            "type": "string"
          },
          "description": {
            "type": "string",
            "example": "The description of the app.",
            "nullable": true
          },
          "external_url": {
            "type": "string",
            "format": "uri",
            "example": "https://example.com"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/apps/super-ci"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2017-07-08T16:18:44-04:00"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2017-07-08T16:18:44-04:00"
          },
          "permissions": {
            "description": "The set of permissions for the GitHub app",
            "type": "object",
            "properties": {
              "issues": {
                "type": "string"
              },
              "checks": {
                "type": "string"
              },
              "metadata": {
                "type": "string"
              },
              "contents": {
                "type": "string"
              },
              "deployments": {
                "type": "string"
              }
            },
            "additionalProperties": {
              "type": "string"
            },
            "example": {
              "issues": "read",
              "deployments": "write"
            }
          },
          "events": {
            "description": "The list of events for the GitHub app. Note that the `installation_target`, `security_advisory`, and `meta` events are not included because they are global events and not specific to an installation.",
            "example": [
              "label",
              "deployment"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "installations_count": {
            "description": "The number of installations associated with the GitHub app. Only returned when the integration is requesting details about itself.",
            "example": 5,
            "type": "integer"
          }
        },
        "required": [
          "id",
          "node_id",
          "owner",
          "name",
          "description",
          "external_url",
          "html_url",
          "created_at",
          "updated_at",
          "permissions",
          "events"
        ]
      },
      "webhook-config-url": {
        "type": "string",
        "description": "The URL to which the payloads will be delivered.",
        "example": "https://example.com/webhook",
        "format": "uri"
      },
      "webhook-config-content-type": {
        "type": "string",
        "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
        "example": "\"json\""
      },
      "webhook-config-secret": {
        "type": "string",
        "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/webhooks/event-payloads/#delivery-headers).",
        "example": "\"********\""
      },
      "webhook-config-insecure-ssl": {
        "oneOf": [
          {
            "type": "string",
            "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
            "example": "\"0\""
          },
          {
            "type": "number"
          }
        ]
      },
      "webhook-config": {
        "title": "Webhook Configuration",
        "description": "Configuration object of the webhook",
        "type": "object",
        "properties": {
          "url": {
            "$ref": "#/components/schemas/webhook-config-url"
          },
          "content_type": {
            "$ref": "#/components/schemas/webhook-config-content-type"
          },
          "secret": {
            "$ref": "#/components/schemas/webhook-config-secret"
          },
          "insecure_ssl": {
            "$ref": "#/components/schemas/webhook-config-insecure-ssl"
          }
        }
      },
      "hook-delivery-item": {
        "title": "Simple webhook delivery",
        "description": "Delivery made by a webhook, without request and response information.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the webhook delivery.",
            "type": "integer",
            "format": "int64",
            "example": 42
          },
          "guid": {
            "description": "Unique identifier for the event (shared with all deliveries for all webhooks that subscribe to this event).",
            "type": "string",
            "example": "58474f00-b361-11eb-836d-0e4f3503ccbe"
          },
          "delivered_at": {
            "description": "Time when the webhook delivery occurred.",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-12T20:33:44Z"
          },
          "redelivery": {
            "description": "Whether the webhook delivery is a redelivery.",
            "type": "boolean",
            "example": false
          },
          "duration": {
            "description": "Time spent delivering.",
            "type": "number",
            "example": 0.03
          },
          "status": {
            "description": "Describes the response returned after attempting the delivery.",
            "type": "string",
            "example": "failed to connect"
          },
          "status_code": {
            "description": "Status code received when delivery was made.",
            "type": "integer",
            "example": 502
          },
          "event": {
            "description": "The event that triggered the delivery.",
            "type": "string",
            "example": "issues"
          },
          "action": {
            "description": "The type of activity for the event that triggered the delivery.",
            "type": "string",
            "example": "opened",
            "nullable": true
          },
          "installation_id": {
            "description": "The id of the GitHub App installation associated with this event.",
            "type": "integer",
            "format": "int64",
            "example": 123,
            "nullable": true
          },
          "repository_id": {
            "description": "The id of the repository associated with this event.",
            "type": "integer",
            "format": "int64",
            "example": 123,
            "nullable": true
          },
          "throttled_at": {
            "description": "Time when the webhook delivery was throttled.",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-12T20:33:44Z",
            "nullable": true
          }
        },
        "required": [
          "id",
          "guid",
          "delivered_at",
          "redelivery",
          "duration",
          "status",
          "status_code",
          "event",
          "action",
          "installation_id",
          "repository_id"
        ]
      },
      "scim-error": {
        "title": "Scim Error",
        "description": "Scim Error",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "documentation_url": {
            "type": "string",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer"
          },
          "scimType": {
            "type": "string",
            "nullable": true
          },
          "schemas": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "validation-error": {
        "title": "Validation Error",
        "description": "Validation Error",
        "type": "object",
        "required": [
          "message",
          "documentation_url"
        ],
        "properties": {
          "message": {
            "type": "string"
          },
          "documentation_url": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "code"
              ],
              "properties": {
                "resource": {
                  "type": "string"
                },
                "field": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                },
                "index": {
                  "type": "integer"
                },
                "value": {
                  "oneOf": [
                    {
                      "type": "string",
                      "nullable": true
                    },
                    {
                      "type": "integer",
                      "nullable": true
                    },
                    {
                      "type": "array",
                      "nullable": true,
                      "items": {
                        "type": "string"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "hook-delivery": {
        "title": "Webhook delivery",
        "description": "Delivery made by a webhook.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the delivery.",
            "type": "integer",
            "example": 42
          },
          "guid": {
            "description": "Unique identifier for the event (shared with all deliveries for all webhooks that subscribe to this event).",
            "type": "string",
            "example": "58474f00-b361-11eb-836d-0e4f3503ccbe"
          },
          "delivered_at": {
            "description": "Time when the delivery was delivered.",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-12T20:33:44Z"
          },
          "redelivery": {
            "description": "Whether the delivery is a redelivery.",
            "type": "boolean",
            "example": false
          },
          "duration": {
            "description": "Time spent delivering.",
            "type": "number",
            "example": 0.03
          },
          "status": {
            "description": "Description of the status of the attempted delivery",
            "type": "string",
            "example": "failed to connect"
          },
          "status_code": {
            "description": "Status code received when delivery was made.",
            "type": "integer",
            "example": 502
          },
          "event": {
            "description": "The event that triggered the delivery.",
            "type": "string",
            "example": "issues"
          },
          "action": {
            "description": "The type of activity for the event that triggered the delivery.",
            "type": "string",
            "example": "opened",
            "nullable": true
          },
          "installation_id": {
            "description": "The id of the GitHub App installation associated with this event.",
            "type": "integer",
            "example": 123,
            "nullable": true
          },
          "repository_id": {
            "description": "The id of the repository associated with this event.",
            "type": "integer",
            "example": 123,
            "nullable": true
          },
          "throttled_at": {
            "description": "Time when the webhook delivery was throttled.",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-12T20:33:44Z",
            "nullable": true
          },
          "url": {
            "description": "The URL target of the delivery.",
            "type": "string",
            "example": "https://www.example.com"
          },
          "request": {
            "type": "object",
            "properties": {
              "headers": {
                "description": "The request headers sent with the webhook delivery.",
                "type": "object",
                "nullable": true,
                "additionalProperties": true
              },
              "payload": {
                "description": "The webhook payload.",
                "type": "object",
                "nullable": true,
                "additionalProperties": true
              }
            },
            "required": [
              "headers",
              "payload"
            ]
          },
          "response": {
            "type": "object",
            "properties": {
              "headers": {
                "description": "The response headers received when the delivery was made.",
                "type": "object",
                "nullable": true,
                "additionalProperties": true
              },
              "payload": {
                "description": "The response payload received.",
                "type": "string",
                "nullable": true,
                "additionalProperties": true
              }
            },
            "required": [
              "headers",
              "payload"
            ]
          }
        },
        "required": [
          "id",
          "guid",
          "delivered_at",
          "redelivery",
          "duration",
          "status",
          "status_code",
          "event",
          "action",
          "installation_id",
          "repository_id",
          "request",
          "response"
        ]
      },
      "integration-installation-request": {
        "title": "Integration Installation Request",
        "description": "Request to install an integration on a target",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the request installation.",
            "type": "integer",
            "example": 42
          },
          "node_id": {
            "type": "string",
            "example": "MDExOkludGVncmF0aW9uMQ=="
          },
          "account": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/simple-user"
              },
              {
                "$ref": "#/components/schemas/enterprise"
              }
            ]
          },
          "requester": {
            "$ref": "#/components/schemas/simple-user"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2022-07-08T16:18:44-04:00"
          }
        },
        "required": [
          "id",
          "account",
          "requester",
          "created_at"
        ]
      },
      "app-permissions": {
        "title": "App Permissions",
        "type": "object",
        "description": "The permissions granted to the user access token.",
        "properties": {
          "actions": {
            "type": "string",
            "description": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts.",
            "enum": [
              "read",
              "write"
            ]
          },
          "administration": {
            "type": "string",
            "description": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation.",
            "enum": [
              "read",
              "write"
            ]
          },
          "checks": {
            "type": "string",
            "description": "The level of permission to grant the access token for checks on code.",
            "enum": [
              "read",
              "write"
            ]
          },
          "codespaces": {
            "type": "string",
            "description": "The level of permission to grant the access token to create, edit, delete, and list Codespaces.",
            "enum": [
              "read",
              "write"
            ]
          },
          "contents": {
            "type": "string",
            "description": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges.",
            "enum": [
              "read",
              "write"
            ]
          },
          "dependabot_secrets": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage Dependabot secrets.",
            "enum": [
              "read",
              "write"
            ]
          },
          "deployments": {
            "type": "string",
            "description": "The level of permission to grant the access token for deployments and deployment statuses.",
            "enum": [
              "read",
              "write"
            ]
          },
          "environments": {
            "type": "string",
            "description": "The level of permission to grant the access token for managing repository environments.",
            "enum": [
              "read",
              "write"
            ]
          },
          "issues": {
            "type": "string",
            "description": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones.",
            "enum": [
              "read",
              "write"
            ]
          },
          "metadata": {
            "type": "string",
            "description": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata.",
            "enum": [
              "read",
              "write"
            ]
          },
          "packages": {
            "type": "string",
            "description": "The level of permission to grant the access token for packages published to GitHub Packages.",
            "enum": [
              "read",
              "write"
            ]
          },
          "pages": {
            "type": "string",
            "description": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds.",
            "enum": [
              "read",
              "write"
            ]
          },
          "pull_requests": {
            "type": "string",
            "description": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges.",
            "enum": [
              "read",
              "write"
            ]
          },
          "repository_custom_properties": {
            "type": "string",
            "description": "The level of permission to grant the access token to view and edit custom properties for a repository, when allowed by the property.",
            "enum": [
              "read",
              "write"
            ]
          },
          "repository_hooks": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage the post-receive hooks for a repository.",
            "enum": [
              "read",
              "write"
            ]
          },
          "repository_projects": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage repository projects, columns, and cards.",
            "enum": [
              "read",
              "write",
              "admin"
            ]
          },
          "secret_scanning_alerts": {
            "type": "string",
            "description": "The level of permission to grant the access token to view and manage secret scanning alerts.",
            "enum": [
              "read",
              "write"
            ]
          },
          "secrets": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage repository secrets.",
            "enum": [
              "read",
              "write"
            ]
          },
          "security_events": {
            "type": "string",
            "description": "The level of permission to grant the access token to view and manage security events like code scanning alerts.",
            "enum": [
              "read",
              "write"
            ]
          },
          "single_file": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage just a single file.",
            "enum": [
              "read",
              "write"
            ]
          },
          "statuses": {
            "type": "string",
            "description": "The level of permission to grant the access token for commit statuses.",
            "enum": [
              "read",
              "write"
            ]
          },
          "vulnerability_alerts": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage Dependabot alerts.",
            "enum": [
              "read",
              "write"
            ]
          },
          "workflows": {
            "type": "string",
            "description": "The level of permission to grant the access token to update GitHub Actions workflow files.",
            "enum": [
              "write"
            ]
          },
          "members": {
            "type": "string",
            "description": "The level of permission to grant the access token for organization teams and members.",
            "enum": [
              "read",
              "write"
            ]
          },
          "organization_administration": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage access to an organization.",
            "enum": [
              "read",
              "write"
            ]
          },
          "organization_custom_roles": {
            "type": "string",
            "description": "The level of permission to grant the access token for custom repository roles management.",
            "enum": [
              "read",
              "write"
            ]
          },
          "organization_custom_org_roles": {
            "type": "string",
            "description": "The level of permission to grant the access token for custom organization roles management.",
            "enum": [
              "read",
              "write"
            ]
          },
          "organization_custom_properties": {
            "type": "string",
            "description": "The level of permission to grant the access token for custom property management.",
            "enum": [
              "read",
              "write",
              "admin"
            ]
          },
          "organization_copilot_seat_management": {
            "type": "string",
            "description": "The level of permission to grant the access token for managing access to GitHub Copilot for members of an organization with a Copilot Business subscription. This property is in public preview and is subject to change.",
            "enum": [
              "write"
            ]
          },
          "organization_announcement_banners": {
            "type": "string",
            "description": "The level of permission to grant the access token to view and manage announcement banners for an organization.",
            "enum": [
              "read",
              "write"
            ]
          },
          "organization_events": {
            "type": "string",
            "description": "The level of permission to grant the access token to view events triggered by an activity in an organization.",
            "enum": [
              "read"
            ]
          },
          "organization_hooks": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage the post-receive hooks for an organization.",
            "enum": [
              "read",
              "write"
            ]
          },
          "organization_personal_access_tokens": {
            "type": "string",
            "description": "The level of permission to grant the access token for viewing and managing fine-grained personal access token requests to an organization.",
            "enum": [
              "read",
              "write"
            ]
          },
          "organization_personal_access_token_requests": {
            "type": "string",
            "description": "The level of permission to grant the access token for viewing and managing fine-grained personal access tokens that have been approved by an organization.",
            "enum": [
              "read",
              "write"
            ]
          },
          "organization_plan": {
            "type": "string",
            "description": "The level of permission to grant the access token for viewing an organization's plan.",
            "enum": [
              "read"
            ]
          },
          "organization_projects": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage organization projects and projects public preview (where available).",
            "enum": [
              "read",
              "write",
              "admin"
            ]
          },
          "organization_packages": {
            "type": "string",
            "description": "The level of permission to grant the access token for organization packages published to GitHub Packages.",
            "enum": [
              "read",
              "write"
            ]
          },
          "organization_secrets": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage organization secrets.",
            "enum": [
              "read",
              "write"
            ]
          },
          "organization_self_hosted_runners": {
            "type": "string",
            "description": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization.",
            "enum": [
              "read",
              "write"
            ]
          },
          "organization_user_blocking": {
            "type": "string",
            "description": "The level of permission to grant the access token to view and manage users blocked by the organization.",
            "enum": [
              "read",
              "write"
            ]
          },
          "team_discussions": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage team discussions and related comments.",
            "enum": [
              "read",
              "write"
            ]
          },
          "email_addresses": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage the email addresses belonging to a user.",
            "enum": [
              "read",
              "write"
            ]
          },
          "followers": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage the followers belonging to a user.",
            "enum": [
              "read",
              "write"
            ]
          },
          "git_ssh_keys": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage git SSH keys.",
            "enum": [
              "read",
              "write"
            ]
          },
          "gpg_keys": {
            "type": "string",
            "description": "The level of permission to grant the access token to view and manage GPG keys belonging to a user.",
            "enum": [
              "read",
              "write"
            ]
          },
          "interaction_limits": {
            "type": "string",
            "description": "The level of permission to grant the access token to view and manage interaction limits on a repository.",
            "enum": [
              "read",
              "write"
            ]
          },
          "profile": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage the profile settings belonging to a user.",
            "enum": [
              "write"
            ]
          },
          "starring": {
            "type": "string",
            "description": "The level of permission to grant the access token to list and manage repositories a user is starring.",
            "enum": [
              "read",
              "write"
            ]
          }
        },
        "example": {
          "contents": "read",
          "issues": "read",
          "deployments": "write",
          "single_file": "read"
        }
      },
      "nullable-simple-user": {
        "title": "Simple User",
        "description": "A GitHub user.",
        "type": "object",
        "properties": {
          "name": {
            "nullable": true,
            "type": "string"
          },
          "email": {
            "nullable": true,
            "type": "string"
          },
          "login": {
            "type": "string",
            "example": "octocat"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "node_id": {
            "type": "string",
            "example": "MDQ6VXNlcjE="
          },
          "avatar_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/images/error/octocat_happy.gif"
          },
          "gravatar_id": {
            "type": "string",
            "example": "41d064eb2195891e12d0413f63227ea7",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat"
          },
          "followers_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/followers"
          },
          "following_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/following{/other_user}"
          },
          "gists_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/gists{/gist_id}"
          },
          "starred_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
          },
          "subscriptions_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/subscriptions"
          },
          "organizations_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/orgs"
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/repos"
          },
          "events_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/events{/privacy}"
          },
          "received_events_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/received_events"
          },
          "type": {
            "type": "string",
            "example": "User"
          },
          "site_admin": {
            "type": "boolean"
          },
          "starred_at": {
            "type": "string",
            "example": "\"2020-07-09T00:17:55Z\""
          },
          "user_view_type": {
            "type": "string",
            "example": "public"
          }
        },
        "required": [
          "avatar_url",
          "events_url",
          "followers_url",
          "following_url",
          "gists_url",
          "gravatar_id",
          "html_url",
          "id",
          "node_id",
          "login",
          "organizations_url",
          "received_events_url",
          "repos_url",
          "site_admin",
          "starred_url",
          "subscriptions_url",
          "type",
          "url"
        ],
        "nullable": true
      },
      "installation": {
        "title": "Installation",
        "description": "Installation",
        "type": "object",
        "properties": {
          "id": {
            "description": "The ID of the installation.",
            "type": "integer",
            "example": 1
          },
          "account": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#/components/schemas/simple-user"
              },
              {
                "$ref": "#/components/schemas/enterprise"
              }
            ]
          },
          "repository_selection": {
            "description": "Describe whether all repositories have been selected or there's a selection involved",
            "type": "string",
            "enum": [
              "all",
              "selected"
            ]
          },
          "access_tokens_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/app/installations/1/access_tokens"
          },
          "repositories_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/installation/repositories"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/organizations/github/settings/installations/1"
          },
          "app_id": {
            "type": "integer",
            "example": 1
          },
          "client_id": {
            "type": "string",
            "example": "Iv1.ab1112223334445c"
          },
          "target_id": {
            "description": "The ID of the user or organization this token is being scoped to.",
            "type": "integer"
          },
          "target_type": {
            "type": "string",
            "example": "Organization"
          },
          "permissions": {
            "$ref": "#/components/schemas/app-permissions"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "single_file_name": {
            "type": "string",
            "example": "config.yaml",
            "nullable": true
          },
          "has_multiple_single_files": {
            "type": "boolean",
            "example": true
          },
          "single_file_paths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "config.yml",
              ".github/issue_TEMPLATE.md"
            ]
          },
          "app_slug": {
            "type": "string",
            "example": "github-actions"
          },
          "suspended_by": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "suspended_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "contact_email": {
            "type": "string",
            "example": "\"test_13f1e99741e3e004@d7e1eb0bc0a1ba12.com\"",
            "nullable": true
          }
        },
        "required": [
          "id",
          "app_id",
          "app_slug",
          "target_id",
          "target_type",
          "single_file_name",
          "repository_selection",
          "access_tokens_url",
          "html_url",
          "repositories_url",
          "events",
          "account",
          "permissions",
          "created_at",
          "updated_at",
          "suspended_by",
          "suspended_at"
        ]
      },
      "nullable-license-simple": {
        "title": "License Simple",
        "description": "License Simple",
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "example": "mit"
          },
          "name": {
            "type": "string",
            "example": "MIT License"
          },
          "url": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "https://api.github.com/licenses/mit"
          },
          "spdx_id": {
            "type": "string",
            "nullable": true,
            "example": "MIT"
          },
          "node_id": {
            "type": "string",
            "example": "MDc6TGljZW5zZW1pdA=="
          },
          "html_url": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "key",
          "name",
          "url",
          "spdx_id",
          "node_id"
        ],
        "nullable": true
      },
      "repository": {
        "title": "Repository",
        "description": "A repository on GitHub.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the repository",
            "example": 42,
            "type": "integer",
            "format": "int64"
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
          },
          "name": {
            "description": "The name of the repository.",
            "type": "string",
            "example": "Team Environment"
          },
          "full_name": {
            "type": "string",
            "example": "octocat/Hello-World"
          },
          "license": {
            "$ref": "#/components/schemas/nullable-license-simple"
          },
          "forks": {
            "type": "integer"
          },
          "permissions": {
            "type": "object",
            "properties": {
              "admin": {
                "type": "boolean"
              },
              "pull": {
                "type": "boolean"
              },
              "triage": {
                "type": "boolean"
              },
              "push": {
                "type": "boolean"
              },
              "maintain": {
                "type": "boolean"
              }
            },
            "required": [
              "admin",
              "pull",
              "push"
            ]
          },
          "owner": {
            "$ref": "#/components/schemas/simple-user"
          },
          "private": {
            "description": "Whether the repository is private or public.",
            "default": false,
            "type": "boolean"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World"
          },
          "description": {
            "type": "string",
            "example": "This your first repo!",
            "nullable": true
          },
          "fork": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World"
          },
          "archive_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
          },
          "assignees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
          },
          "blobs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
          },
          "branches_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
          },
          "collaborators_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
          },
          "comments_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
          },
          "commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
          },
          "compare_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
          },
          "contents_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
          },
          "contributors_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
          },
          "deployments_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
          },
          "downloads_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/events"
          },
          "forks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/forks"
          },
          "git_commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
          },
          "git_refs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
          },
          "git_tags_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
          },
          "git_url": {
            "type": "string",
            "example": "git:github.com/octocat/Hello-World.git"
          },
          "issue_comment_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
          },
          "issue_events_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
          },
          "issues_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
          },
          "keys_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
          },
          "labels_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
          },
          "languages_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/languages"
          },
          "merges_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/merges"
          },
          "milestones_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
          },
          "notifications_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
          },
          "pulls_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
          },
          "releases_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
          },
          "ssh_url": {
            "type": "string",
            "example": "git@github.com:octocat/Hello-World.git"
          },
          "stargazers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
          },
          "statuses_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
          },
          "subscribers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
          },
          "subscription_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
          },
          "tags_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/tags"
          },
          "teams_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/teams"
          },
          "trees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
          },
          "clone_url": {
            "type": "string",
            "example": "https://github.com/octocat/Hello-World.git"
          },
          "mirror_url": {
            "type": "string",
            "format": "uri",
            "example": "git:git.example.com/octocat/Hello-World",
            "nullable": true
          },
          "hooks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
          },
          "svn_url": {
            "type": "string",
            "format": "uri",
            "example": "https://svn.github.com/octocat/Hello-World"
          },
          "homepage": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "forks_count": {
            "type": "integer",
            "example": 9
          },
          "stargazers_count": {
            "type": "integer",
            "example": 80
          },
          "watchers_count": {
            "type": "integer",
            "example": 80
          },
          "size": {
            "description": "The size of the repository, in kilobytes. Size is calculated hourly. When a repository is initially created, the size is 0.",
            "type": "integer",
            "example": 108
          },
          "default_branch": {
            "description": "The default branch of the repository.",
            "type": "string",
            "example": "master"
          },
          "open_issues_count": {
            "type": "integer",
            "example": 0
          },
          "is_template": {
            "description": "Whether this repository acts as a template that can be used to generate new repositories.",
            "default": false,
            "type": "boolean",
            "example": true
          },
          "topics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "has_issues": {
            "description": "Whether issues are enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "has_projects": {
            "description": "Whether projects are enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "has_wiki": {
            "description": "Whether the wiki is enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "has_pages": {
            "type": "boolean"
          },
          "has_downloads": {
            "description": "Whether downloads are enabled.",
            "default": true,
            "type": "boolean",
            "example": true,
            "deprecated": true
          },
          "has_discussions": {
            "description": "Whether discussions are enabled.",
            "default": false,
            "type": "boolean",
            "example": true
          },
          "archived": {
            "description": "Whether the repository is archived.",
            "default": false,
            "type": "boolean"
          },
          "disabled": {
            "type": "boolean",
            "description": "Returns whether or not this repository disabled."
          },
          "visibility": {
            "description": "The repository visibility: public, private, or internal.",
            "default": "public",
            "type": "string"
          },
          "pushed_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:06:43Z",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:01:12Z",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:14:43Z",
            "nullable": true
          },
          "allow_rebase_merge": {
            "description": "Whether to allow rebase merges for pull requests.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "temp_clone_token": {
            "type": "string"
          },
          "allow_squash_merge": {
            "description": "Whether to allow squash merges for pull requests.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "allow_auto_merge": {
            "description": "Whether to allow Auto-merge to be used on pull requests.",
            "default": false,
            "type": "boolean",
            "example": false
          },
          "delete_branch_on_merge": {
            "description": "Whether to delete head branches when pull requests are merged",
            "default": false,
            "type": "boolean",
            "example": false
          },
          "allow_update_branch": {
            "description": "Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.",
            "default": false,
            "type": "boolean",
            "example": false
          },
          "use_squash_pr_title_as_default": {
            "type": "boolean",
            "description": "Whether a squash merge commit can use the pull request title as default. **This property is closing down. Please use `squash_merge_commit_title` instead.",
            "default": false,
            "deprecated": true
          },
          "squash_merge_commit_title": {
            "type": "string",
            "enum": [
              "PR_TITLE",
              "COMMIT_OR_PR_TITLE"
            ],
            "description": "The default value for a squash merge commit title:\n\n- `PR_TITLE` - default to the pull request's title.\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit)."
          },
          "squash_merge_commit_message": {
            "type": "string",
            "enum": [
              "PR_BODY",
              "COMMIT_MESSAGES",
              "BLANK"
            ],
            "description": "The default value for a squash merge commit message:\n\n- `PR_BODY` - default to the pull request's body.\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\n- `BLANK` - default to a blank commit message."
          },
          "merge_commit_title": {
            "type": "string",
            "enum": [
              "PR_TITLE",
              "MERGE_MESSAGE"
            ],
            "description": "The default value for a merge commit title.\n\n- `PR_TITLE` - default to the pull request's title.\n- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name)."
          },
          "merge_commit_message": {
            "type": "string",
            "enum": [
              "PR_BODY",
              "PR_TITLE",
              "BLANK"
            ],
            "description": "The default value for a merge commit message.\n\n- `PR_TITLE` - default to the pull request's title.\n- `PR_BODY` - default to the pull request's body.\n- `BLANK` - default to a blank commit message."
          },
          "allow_merge_commit": {
            "description": "Whether to allow merge commits for pull requests.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "allow_forking": {
            "description": "Whether to allow forking this repo",
            "type": "boolean"
          },
          "web_commit_signoff_required": {
            "description": "Whether to require contributors to sign off on web-based commits",
            "default": false,
            "type": "boolean"
          },
          "open_issues": {
            "type": "integer"
          },
          "watchers": {
            "type": "integer"
          },
          "master_branch": {
            "type": "string"
          },
          "starred_at": {
            "type": "string",
            "example": "\"2020-07-09T00:17:42Z\""
          },
          "anonymous_access_enabled": {
            "type": "boolean",
            "description": "Whether anonymous git access is enabled for this repository"
          },
          "code_search_index_status": {
            "type": "object",
            "description": "The status of the code search index for this repository",
            "properties": {
              "lexical_search_ok": {
                "type": "boolean"
              },
              "lexical_commit_sha": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "archive_url",
          "assignees_url",
          "blobs_url",
          "branches_url",
          "collaborators_url",
          "comments_url",
          "commits_url",
          "compare_url",
          "contents_url",
          "contributors_url",
          "deployments_url",
          "description",
          "downloads_url",
          "events_url",
          "fork",
          "forks_url",
          "full_name",
          "git_commits_url",
          "git_refs_url",
          "git_tags_url",
          "hooks_url",
          "html_url",
          "id",
          "node_id",
          "issue_comment_url",
          "issue_events_url",
          "issues_url",
          "keys_url",
          "labels_url",
          "languages_url",
          "merges_url",
          "milestones_url",
          "name",
          "notifications_url",
          "owner",
          "private",
          "pulls_url",
          "releases_url",
          "stargazers_url",
          "statuses_url",
          "subscribers_url",
          "subscription_url",
          "tags_url",
          "teams_url",
          "trees_url",
          "url",
          "clone_url",
          "default_branch",
          "forks",
          "forks_count",
          "git_url",
          "has_downloads",
          "has_issues",
          "has_projects",
          "has_wiki",
          "has_pages",
          "homepage",
          "language",
          "archived",
          "disabled",
          "mirror_url",
          "open_issues",
          "open_issues_count",
          "license",
          "pushed_at",
          "size",
          "ssh_url",
          "stargazers_count",
          "svn_url",
          "watchers",
          "watchers_count",
          "created_at",
          "updated_at"
        ]
      },
      "installation-token": {
        "title": "Installation Token",
        "description": "Authentication token for a GitHub App installed on a user or org.",
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "expires_at": {
            "type": "string"
          },
          "permissions": {
            "$ref": "#/components/schemas/app-permissions"
          },
          "repository_selection": {
            "type": "string",
            "enum": [
              "all",
              "selected"
            ]
          },
          "repositories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/repository"
            }
          },
          "single_file": {
            "type": "string",
            "example": "README.md"
          },
          "has_multiple_single_files": {
            "type": "boolean",
            "example": true
          },
          "single_file_paths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "config.yml",
              ".github/issue_TEMPLATE.md"
            ]
          }
        },
        "required": [
          "token",
          "expires_at"
        ]
      },
      "nullable-scoped-installation": {
        "title": "Scoped Installation",
        "type": "object",
        "properties": {
          "permissions": {
            "$ref": "#/components/schemas/app-permissions"
          },
          "repository_selection": {
            "description": "Describe whether all repositories have been selected or there's a selection involved",
            "type": "string",
            "enum": [
              "all",
              "selected"
            ]
          },
          "single_file_name": {
            "type": "string",
            "example": "config.yaml",
            "nullable": true
          },
          "has_multiple_single_files": {
            "type": "boolean",
            "example": true
          },
          "single_file_paths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "config.yml",
              ".github/issue_TEMPLATE.md"
            ]
          },
          "repositories_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/repos"
          },
          "account": {
            "$ref": "#/components/schemas/simple-user"
          }
        },
        "required": [
          "permissions",
          "repository_selection",
          "single_file_name",
          "repositories_url",
          "account"
        ],
        "nullable": true
      },
      "authorization": {
        "title": "Authorization",
        "description": "The authorization for an OAuth app, GitHub App, or a Personal Access Token.",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "scopes": {
            "description": "A list of scopes that this authorization is in.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "token": {
            "type": "string"
          },
          "token_last_eight": {
            "type": "string",
            "nullable": true
          },
          "hashed_token": {
            "type": "string",
            "nullable": true
          },
          "app": {
            "type": "object",
            "properties": {
              "client_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "client_id",
              "name",
              "url"
            ]
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "note_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "fingerprint": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "installation": {
            "$ref": "#/components/schemas/nullable-scoped-installation"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "app",
          "id",
          "note",
          "note_url",
          "scopes",
          "token",
          "hashed_token",
          "token_last_eight",
          "fingerprint",
          "url",
          "created_at",
          "updated_at",
          "expires_at"
        ]
      },
      "simple-classroom-repository": {
        "title": "Simple Classroom Repository",
        "description": "A GitHub repository view for Classroom",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1296269,
            "description": "A unique identifier of the repository."
          },
          "full_name": {
            "type": "string",
            "example": "octocat/Hello-World",
            "description": "The full, globally unique name of the repository."
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World",
            "description": "The URL to view the repository on GitHub.com."
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "description": "The GraphQL identifier of the repository."
          },
          "private": {
            "type": "boolean",
            "description": "Whether the repository is private."
          },
          "default_branch": {
            "type": "string",
            "example": "main",
            "description": "The default branch for the repository."
          }
        },
        "required": [
          "id",
          "full_name",
          "html_url",
          "node_id",
          "private",
          "default_branch"
        ]
      },
      "simple-classroom-organization": {
        "title": "Organization Simple for Classroom",
        "description": "A GitHub organization.",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "login": {
            "type": "string",
            "example": "github"
          },
          "node_id": {
            "type": "string",
            "example": "MDEyOk9yZ2FuaXphdGlvbjE="
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/github"
          },
          "name": {
            "type": "string",
            "example": "Github - Code thigns happen here",
            "nullable": true
          },
          "avatar_url": {
            "type": "string",
            "example": "https://github.com/images/error/octocat_happy.gif"
          }
        },
        "required": [
          "id",
          "login",
          "node_id",
          "html_url",
          "name",
          "avatar_url"
        ]
      },
      "classroom": {
        "title": "Classroom",
        "description": "A GitHub Classroom classroom",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the classroom.",
            "example": 42,
            "type": "integer"
          },
          "name": {
            "description": "The name of the classroom.",
            "type": "string",
            "example": "Programming Elixir"
          },
          "archived": {
            "description": "Whether classroom is archived.",
            "type": "boolean",
            "example": false
          },
          "organization": {
            "$ref": "#/components/schemas/simple-classroom-organization"
          },
          "url": {
            "description": "The URL of the classroom on GitHub Classroom.",
            "type": "string",
            "example": "https://classroom.github.com/classrooms/1-programming-elixir"
          }
        },
        "required": [
          "id",
          "name",
          "archived",
          "organization",
          "url"
        ]
      },
      "classroom-assignment": {
        "title": "Classroom Assignment",
        "description": "A GitHub Classroom assignment",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the repository.",
            "type": "integer",
            "example": 42
          },
          "public_repo": {
            "description": "Whether an accepted assignment creates a public repository.",
            "type": "boolean",
            "example": true
          },
          "title": {
            "description": "Assignment title.",
            "type": "string",
            "example": "Intro to Binaries"
          },
          "type": {
            "description": "Whether it's a group assignment or individual assignment.",
            "type": "string",
            "example": "individual",
            "enum": [
              "individual",
              "group"
            ]
          },
          "invite_link": {
            "description": "The link that a student can use to accept the assignment.",
            "type": "string",
            "example": "https://classroom.github.com/a/Lx7jiUgx"
          },
          "invitations_enabled": {
            "description": "Whether the invitation link is enabled. Visiting an enabled invitation link will accept the assignment.",
            "type": "boolean",
            "example": true
          },
          "slug": {
            "description": "Sluggified name of the assignment.",
            "type": "string",
            "example": "intro-to-binaries"
          },
          "students_are_repo_admins": {
            "description": "Whether students are admins on created repository when a student accepts the assignment.",
            "type": "boolean",
            "example": true
          },
          "feedback_pull_requests_enabled": {
            "description": "Whether feedback pull request will be created when a student accepts the assignment.",
            "type": "boolean",
            "example": true
          },
          "max_teams": {
            "description": "The maximum allowable teams for the assignment.",
            "nullable": true,
            "type": "integer",
            "example": 0
          },
          "max_members": {
            "description": "The maximum allowable members per team.",
            "nullable": true,
            "type": "integer",
            "example": 0
          },
          "editor": {
            "description": "The selected editor for the assignment.",
            "type": "string",
            "example": "codespaces"
          },
          "accepted": {
            "description": "The number of students that have accepted the assignment.",
            "type": "integer",
            "example": 25
          },
          "submitted": {
            "description": "The number of students that have submitted the assignment.",
            "type": "integer",
            "example": 10
          },
          "passing": {
            "description": "The number of students that have passed the assignment.",
            "type": "integer",
            "example": 10
          },
          "language": {
            "description": "The programming language used in the assignment.",
            "type": "string",
            "example": "elixir"
          },
          "deadline": {
            "description": "The time at which the assignment is due.",
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:06:43Z",
            "nullable": true
          },
          "starter_code_repository": {
            "$ref": "#/components/schemas/simple-classroom-repository"
          },
          "classroom": {
            "$ref": "#/components/schemas/classroom"
          }
        },
        "required": [
          "id",
          "public_repo",
          "title",
          "type",
          "invite_link",
          "invitations_enabled",
          "slug",
          "students_are_repo_admins",
          "feedback_pull_requests_enabled",
          "max_teams",
          "max_members",
          "editor",
          "accepted",
          "submitted",
          "passing",
          "language",
          "deadline",
          "starter_code_repository",
          "classroom"
        ]
      },
      "simple-classroom-user": {
        "title": "Simple Classroom User",
        "description": "A GitHub user simplified for Classroom.",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "login": {
            "type": "string",
            "example": "octocat"
          },
          "avatar_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/images/error/octocat_happy.gif"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat"
          }
        },
        "required": [
          "id",
          "login",
          "avatar_url",
          "html_url"
        ]
      },
      "simple-classroom": {
        "title": "Simple Classroom",
        "description": "A GitHub Classroom classroom",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the classroom.",
            "example": 42,
            "type": "integer"
          },
          "name": {
            "description": "The name of the classroom.",
            "type": "string",
            "example": "Programming Elixir"
          },
          "archived": {
            "description": "Returns whether classroom is archived or not.",
            "type": "boolean",
            "example": false
          },
          "url": {
            "description": "The url of the classroom on GitHub Classroom.",
            "type": "string",
            "example": "https://classroom.github.com/classrooms/1-programming-elixir"
          }
        },
        "required": [
          "id",
          "name",
          "archived",
          "url"
        ]
      },
      "simple-classroom-assignment": {
        "title": "Simple Classroom Assignment",
        "description": "A GitHub Classroom assignment",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the repository.",
            "type": "integer",
            "example": 42
          },
          "public_repo": {
            "description": "Whether an accepted assignment creates a public repository.",
            "type": "boolean",
            "example": true
          },
          "title": {
            "description": "Assignment title.",
            "type": "string",
            "example": "Intro to Binaries"
          },
          "type": {
            "description": "Whether it's a Group Assignment or Individual Assignment.",
            "type": "string",
            "example": "individual",
            "enum": [
              "individual",
              "group"
            ]
          },
          "invite_link": {
            "description": "The link that a student can use to accept the assignment.",
            "type": "string",
            "example": "https://classroom.github.com/a/Lx7jiUgx"
          },
          "invitations_enabled": {
            "description": "Whether the invitation link is enabled. Visiting an enabled invitation link will accept the assignment.",
            "type": "boolean",
            "example": true
          },
          "slug": {
            "description": "Sluggified name of the assignment.",
            "type": "string",
            "example": "intro-to-binaries"
          },
          "students_are_repo_admins": {
            "description": "Whether students are admins on created repository on accepted assignment.",
            "type": "boolean",
            "example": true
          },
          "feedback_pull_requests_enabled": {
            "description": "Whether feedback pull request will be created on assignment acceptance.",
            "type": "boolean",
            "example": true
          },
          "max_teams": {
            "description": "The maximum allowable teams for the assignment.",
            "nullable": true,
            "type": "integer",
            "example": 0
          },
          "max_members": {
            "description": "The maximum allowable members per team.",
            "nullable": true,
            "type": "integer",
            "example": 0
          },
          "editor": {
            "description": "The selected editor for the assignment.",
            "type": "string",
            "example": "codespaces"
          },
          "accepted": {
            "description": "The number of students that have accepted the assignment.",
            "type": "integer",
            "example": 25
          },
          "submitted": {
            "description": "The number of students that have submitted the assignment.",
            "type": "integer",
            "example": 10
          },
          "passing": {
            "description": "The number of students that have passed the assignment.",
            "type": "integer",
            "example": 10
          },
          "language": {
            "description": "The programming language used in the assignment.",
            "type": "string",
            "example": "elixir"
          },
          "deadline": {
            "description": "The time at which the assignment is due.",
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:06:43Z",
            "nullable": true
          },
          "classroom": {
            "$ref": "#/components/schemas/simple-classroom"
          }
        },
        "required": [
          "id",
          "public_repo",
          "title",
          "type",
          "invite_link",
          "invitations_enabled",
          "slug",
          "students_are_repo_admins",
          "feedback_pull_requests_enabled",
          "editor",
          "accepted",
          "submitted",
          "passing",
          "language",
          "deadline",
          "classroom"
        ]
      },
      "classroom-accepted-assignment": {
        "title": "Classroom Accepted Assignment",
        "description": "A GitHub Classroom accepted assignment",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the repository.",
            "type": "integer",
            "example": 42
          },
          "submitted": {
            "description": "Whether an accepted assignment has been submitted.",
            "type": "boolean",
            "example": true
          },
          "passing": {
            "description": "Whether a submission passed.",
            "type": "boolean",
            "example": true
          },
          "commit_count": {
            "description": "Count of student commits.",
            "type": "integer",
            "example": 5
          },
          "grade": {
            "description": "Most recent grade.",
            "type": "string",
            "example": "10/10"
          },
          "students": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/simple-classroom-user"
            }
          },
          "repository": {
            "$ref": "#/components/schemas/simple-classroom-repository"
          },
          "assignment": {
            "$ref": "#/components/schemas/simple-classroom-assignment"
          }
        },
        "required": [
          "id",
          "submitted",
          "passing",
          "commit_count",
          "grade",
          "students",
          "repository",
          "assignment"
        ]
      },
      "classroom-assignment-grade": {
        "title": "Classroom Assignment Grade",
        "description": "Grade for a student or groups GitHub Classroom assignment",
        "type": "object",
        "properties": {
          "assignment_name": {
            "description": "Name of the assignment",
            "type": "string"
          },
          "assignment_url": {
            "description": "URL of the assignment",
            "type": "string"
          },
          "starter_code_url": {
            "description": "URL of the starter code for the assignment",
            "type": "string"
          },
          "github_username": {
            "description": "GitHub username of the student",
            "type": "string"
          },
          "roster_identifier": {
            "description": "Roster identifier of the student",
            "type": "string"
          },
          "student_repository_name": {
            "description": "Name of the student's assignment repository",
            "type": "string"
          },
          "student_repository_url": {
            "description": "URL of the student's assignment repository",
            "type": "string"
          },
          "submission_timestamp": {
            "description": "Timestamp of the student's assignment submission",
            "type": "string"
          },
          "points_awarded": {
            "description": "Number of points awarded to the student",
            "type": "integer"
          },
          "points_available": {
            "description": "Number of points available for the assignment",
            "type": "integer"
          },
          "group_name": {
            "description": "If a group assignment, name of the group the student is in",
            "type": "string"
          }
        },
        "required": [
          "assignment_name",
          "assignment_url",
          "starter_code_url",
          "github_username",
          "roster_identifier",
          "student_repository_name",
          "student_repository_url",
          "submission_timestamp",
          "points_awarded",
          "points_available"
        ]
      },
      "code-of-conduct": {
        "title": "Code Of Conduct",
        "description": "Code Of Conduct",
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "example": "contributor_covenant"
          },
          "name": {
            "type": "string",
            "example": "Contributor Covenant"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/codes_of_conduct/contributor_covenant"
          },
          "body": {
            "type": "string",
            "example": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), version 1.4, available at [http://contributor-covenant.org/version/1/4](http://contributor-covenant.org/version/1/4/).\n"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        },
        "required": [
          "url",
          "html_url",
          "key",
          "name"
        ]
      },
      "code-security-configuration": {
        "type": "object",
        "description": "A code security configuration",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The ID of the code security configuration"
          },
          "name": {
            "type": "string",
            "description": "The name of the code security configuration. Must be unique within the organization."
          },
          "target_type": {
            "type": "string",
            "description": "The type of the code security configuration.",
            "enum": [
              "global",
              "organization",
              "enterprise"
            ]
          },
          "description": {
            "type": "string",
            "description": "A description of the code security configuration"
          },
          "advanced_security": {
            "type": "string",
            "description": "The enablement status of GitHub Advanced Security",
            "enum": [
              "enabled",
              "disabled",
              "code_security",
              "secret_protection"
            ]
          },
          "dependency_graph": {
            "type": "string",
            "description": "The enablement status of Dependency Graph",
            "enum": [
              "enabled",
              "disabled",
              "not_set"
            ]
          },
          "dependency_graph_autosubmit_action": {
            "type": "string",
            "description": "The enablement status of Automatic dependency submission",
            "enum": [
              "enabled",
              "disabled",
              "not_set"
            ]
          },
          "dependency_graph_autosubmit_action_options": {
            "type": "object",
            "description": "Feature options for Automatic dependency submission",
            "properties": {
              "labeled_runners": {
                "type": "boolean",
                "description": "Whether to use runners labeled with 'dependency-submission' or standard GitHub runners."
              }
            }
          },
          "dependabot_alerts": {
            "type": "string",
            "description": "The enablement status of Dependabot alerts",
            "enum": [
              "enabled",
              "disabled",
              "not_set"
            ]
          },
          "dependabot_security_updates": {
            "type": "string",
            "description": "The enablement status of Dependabot security updates",
            "enum": [
              "enabled",
              "disabled",
              "not_set"
            ]
          },
          "code_scanning_options": {
            "type": "object",
            "description": "Feature options for code scanning",
            "nullable": true,
            "properties": {
              "allow_advanced": {
                "nullable": true,
                "type": "boolean",
                "description": "Whether to allow repos which use advanced setup"
              }
            }
          },
          "code_scanning_default_setup": {
            "type": "string",
            "description": "The enablement status of code scanning default setup",
            "enum": [
              "enabled",
              "disabled",
              "not_set"
            ]
          },
          "code_scanning_default_setup_options": {
            "type": "object",
            "description": "Feature options for code scanning default setup",
            "nullable": true,
            "properties": {
              "runner_type": {
                "nullable": true,
                "type": "string",
                "enum": [
                  "standard",
                  "labeled",
                  "not_set"
                ],
                "description": "Whether to use labeled runners or standard GitHub runners."
              },
              "runner_label": {
                "nullable": true,
                "type": "string",
                "description": "The label of the runner to use for code scanning when runner_type is 'labeled'."
              }
            }
          },
          "code_scanning_delegated_alert_dismissal": {
            "type": "string",
            "description": "The enablement status of code scanning delegated alert dismissal",
            "enum": [
              "enabled",
              "disabled",
              "not_set"
            ]
          },
          "secret_scanning": {
            "type": "string",
            "description": "The enablement status of secret scanning",
            "enum": [
              "enabled",
              "disabled",
              "not_set"
            ]
          },
          "secret_scanning_push_protection": {
            "type": "string",
            "description": "The enablement status of secret scanning push protection",
            "enum": [
              "enabled",
              "disabled",
              "not_set"
            ]
          },
          "secret_scanning_delegated_bypass": {
            "type": "string",
            "description": "The enablement status of secret scanning delegated bypass",
            "enum": [
              "enabled",
              "disabled",
              "not_set"
            ]
          },
          "secret_scanning_delegated_bypass_options": {
            "type": "object",
            "description": "Feature options for secret scanning delegated bypass",
            "properties": {
              "reviewers": {
                "type": "array",
                "description": "The bypass reviewers for secret scanning delegated bypass",
                "items": {
                  "type": "object",
                  "required": [
                    "reviewer_id",
                    "reviewer_type"
                  ],
                  "properties": {
                    "reviewer_id": {
                      "type": "integer",
                      "description": "The ID of the team or role selected as a bypass reviewer"
                    },
                    "reviewer_type": {
                      "type": "string",
                      "description": "The type of the bypass reviewer",
                      "enum": [
                        "TEAM",
                        "ROLE"
                      ]
                    }
                  }
                }
              }
            }
          },
          "secret_scanning_validity_checks": {
            "type": "string",
            "description": "The enablement status of secret scanning validity checks",
            "enum": [
              "enabled",
              "disabled",
              "not_set"
            ]
          },
          "secret_scanning_non_provider_patterns": {
            "type": "string",
            "description": "The enablement status of secret scanning non-provider patterns",
            "enum": [
              "enabled",
              "disabled",
              "not_set"
            ]
          },
          "secret_scanning_generic_secrets": {
            "type": "string",
            "description": "The enablement status of Copilot secret scanning",
            "enum": [
              "enabled",
              "disabled",
              "not_set"
            ]
          },
          "secret_scanning_delegated_alert_dismissal": {
            "type": "string",
            "description": "The enablement status of secret scanning delegated alert dismissal",
            "enum": [
              "enabled",
              "disabled",
              "not_set"
            ]
          },
          "private_vulnerability_reporting": {
            "type": "string",
            "description": "The enablement status of private vulnerability reporting",
            "enum": [
              "enabled",
              "disabled",
              "not_set"
            ]
          },
          "enforcement": {
            "type": "string",
            "description": "The enforcement status for a security configuration",
            "enum": [
              "enforced",
              "unenforced"
            ]
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "The URL of the configuration"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "description": "The URL of the configuration"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "code-scanning-options": {
        "type": "object",
        "description": "Security Configuration feature options for code scanning",
        "nullable": true,
        "properties": {
          "allow_advanced": {
            "nullable": true,
            "type": "boolean",
            "description": "Whether to allow repos which use advanced setup"
          }
        }
      },
      "code-scanning-default-setup-options": {
        "type": "object",
        "description": "Feature options for code scanning default setup",
        "nullable": true,
        "properties": {
          "runner_type": {
            "type": "string",
            "enum": [
              "standard",
              "labeled",
              "not_set"
            ],
            "description": "Whether to use labeled runners or standard GitHub runners."
          },
          "runner_label": {
            "nullable": true,
            "type": "string",
            "description": "The label of the runner to use for code scanning default setup when runner_type is 'labeled'."
          }
        }
      },
      "code-security-default-configurations": {
        "type": "array",
        "description": "A list of default code security configurations",
        "items": {
          "type": "object",
          "properties": {
            "default_for_new_repos": {
              "enum": [
                "public",
                "private_and_internal",
                "all"
              ],
              "description": "The visibility of newly created repositories for which the code security configuration will be applied to by default"
            },
            "configuration": {
              "$ref": "#/components/schemas/code-security-configuration"
            }
          }
        }
      },
      "simple-repository": {
        "title": "Simple Repository",
        "description": "A GitHub repository.",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1296269,
            "description": "A unique identifier of the repository."
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "description": "The GraphQL identifier of the repository."
          },
          "name": {
            "type": "string",
            "example": "Hello-World",
            "description": "The name of the repository."
          },
          "full_name": {
            "type": "string",
            "example": "octocat/Hello-World",
            "description": "The full, globally unique, name of the repository."
          },
          "owner": {
            "$ref": "#/components/schemas/simple-user"
          },
          "private": {
            "type": "boolean",
            "description": "Whether the repository is private."
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World",
            "description": "The URL to view the repository on GitHub.com."
          },
          "description": {
            "type": "string",
            "example": "This your first repo!",
            "nullable": true,
            "description": "The repository description."
          },
          "fork": {
            "type": "boolean",
            "description": "Whether the repository is a fork."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World",
            "description": "The URL to get more information about the repository from the GitHub API."
          },
          "archive_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
            "description": "A template for the API URL to download the repository as an archive."
          },
          "assignees_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
            "description": "A template for the API URL to list the available assignees for issues in the repository."
          },
          "blobs_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
            "description": "A template for the API URL to create or retrieve a raw Git blob in the repository."
          },
          "branches_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
            "description": "A template for the API URL to get information about branches in the repository."
          },
          "collaborators_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
            "description": "A template for the API URL to get information about collaborators of the repository."
          },
          "comments_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
            "description": "A template for the API URL to get information about comments on the repository."
          },
          "commits_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
            "description": "A template for the API URL to get information about commits on the repository."
          },
          "compare_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
            "description": "A template for the API URL to compare two commits or refs."
          },
          "contents_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
            "description": "A template for the API URL to get the contents of the repository."
          },
          "contributors_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/contributors",
            "description": "A template for the API URL to list the contributors to the repository."
          },
          "deployments_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/deployments",
            "description": "The API URL to list the deployments of the repository."
          },
          "downloads_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/downloads",
            "description": "The API URL to list the downloads on the repository."
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/events",
            "description": "The API URL to list the events of the repository."
          },
          "forks_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/forks",
            "description": "The API URL to list the forks of the repository."
          },
          "git_commits_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
            "description": "A template for the API URL to get information about Git commits of the repository."
          },
          "git_refs_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
            "description": "A template for the API URL to get information about Git refs of the repository."
          },
          "git_tags_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
            "description": "A template for the API URL to get information about Git tags of the repository."
          },
          "issue_comment_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
            "description": "A template for the API URL to get information about issue comments on the repository."
          },
          "issue_events_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
            "description": "A template for the API URL to get information about issue events on the repository."
          },
          "issues_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
            "description": "A template for the API URL to get information about issues on the repository."
          },
          "keys_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
            "description": "A template for the API URL to get information about deploy keys on the repository."
          },
          "labels_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
            "description": "A template for the API URL to get information about labels of the repository."
          },
          "languages_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/languages",
            "description": "The API URL to get information about the languages of the repository."
          },
          "merges_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/merges",
            "description": "The API URL to merge branches in the repository."
          },
          "milestones_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
            "description": "A template for the API URL to get information about milestones of the repository."
          },
          "notifications_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
            "description": "A template for the API URL to get information about notifications on the repository."
          },
          "pulls_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
            "description": "A template for the API URL to get information about pull requests on the repository."
          },
          "releases_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
            "description": "A template for the API URL to get information about releases on the repository."
          },
          "stargazers_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/stargazers",
            "description": "The API URL to list the stargazers on the repository."
          },
          "statuses_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
            "description": "A template for the API URL to get information about statuses of a commit."
          },
          "subscribers_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/subscribers",
            "description": "The API URL to list the subscribers on the repository."
          },
          "subscription_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/subscription",
            "description": "The API URL to subscribe to notifications for this repository."
          },
          "tags_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/tags",
            "description": "The API URL to get information about tags on the repository."
          },
          "teams_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/teams",
            "description": "The API URL to list the teams on the repository."
          },
          "trees_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
            "description": "A template for the API URL to create or retrieve a raw Git tree of the repository."
          },
          "hooks_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/hooks",
            "description": "The API URL to list the hooks on the repository."
          }
        },
        "required": [
          "archive_url",
          "assignees_url",
          "blobs_url",
          "branches_url",
          "collaborators_url",
          "comments_url",
          "commits_url",
          "compare_url",
          "contents_url",
          "contributors_url",
          "deployments_url",
          "description",
          "downloads_url",
          "events_url",
          "fork",
          "forks_url",
          "full_name",
          "git_commits_url",
          "git_refs_url",
          "git_tags_url",
          "hooks_url",
          "html_url",
          "id",
          "node_id",
          "issue_comment_url",
          "issue_events_url",
          "issues_url",
          "keys_url",
          "labels_url",
          "languages_url",
          "merges_url",
          "milestones_url",
          "name",
          "notifications_url",
          "owner",
          "private",
          "pulls_url",
          "releases_url",
          "stargazers_url",
          "statuses_url",
          "subscribers_url",
          "subscription_url",
          "tags_url",
          "teams_url",
          "trees_url",
          "url"
        ]
      },
      "code-security-configuration-repositories": {
        "type": "object",
        "description": "Repositories associated with a code security configuration and attachment status",
        "properties": {
          "status": {
            "type": "string",
            "description": "The attachment status of the code security configuration on the repository.",
            "enum": [
              "attached",
              "attaching",
              "detached",
              "removed",
              "enforced",
              "failed",
              "updating",
              "removed_by_enterprise"
            ]
          },
          "repository": {
            "$ref": "#/components/schemas/simple-repository"
          }
        }
      },
      "alert-number": {
        "type": "integer",
        "description": "The security alert number.",
        "readOnly": true
      },
      "dependabot-alert-package": {
        "type": "object",
        "description": "Details for the vulnerable package.",
        "readOnly": true,
        "properties": {
          "ecosystem": {
            "type": "string",
            "description": "The package's language or package management ecosystem.",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "The unique package name within its ecosystem.",
            "readOnly": true
          }
        },
        "required": [
          "ecosystem",
          "name"
        ],
        "additionalProperties": false
      },
      "dependabot-alert-security-vulnerability": {
        "type": "object",
        "description": "Details pertaining to one vulnerable version range for the advisory.",
        "readOnly": true,
        "properties": {
          "package": {
            "$ref": "#/components/schemas/dependabot-alert-package"
          },
          "severity": {
            "type": "string",
            "description": "The severity of the vulnerability.",
            "readOnly": true,
            "enum": [
              "low",
              "medium",
              "high",
              "critical"
            ]
          },
          "vulnerable_version_range": {
            "type": "string",
            "description": "Conditions that identify vulnerable versions of this vulnerability's package.",
            "readOnly": true
          },
          "first_patched_version": {
            "type": "object",
            "description": "Details pertaining to the package version that patches this vulnerability.",
            "readOnly": true,
            "nullable": true,
            "properties": {
              "identifier": {
                "type": "string",
                "description": "The package version that patches this vulnerability.",
                "readOnly": true
              }
            },
            "required": [
              "identifier"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "package",
          "severity",
          "vulnerable_version_range",
          "first_patched_version"
        ],
        "additionalProperties": false
      },
      "dependabot-alert-security-advisory": {
        "type": "object",
        "description": "Details for the GitHub Security Advisory.",
        "readOnly": true,
        "properties": {
          "ghsa_id": {
            "type": "string",
            "description": "The unique GitHub Security Advisory ID assigned to the advisory.",
            "readOnly": true
          },
          "cve_id": {
            "type": "string",
            "description": "The unique CVE ID assigned to the advisory.",
            "readOnly": true,
            "nullable": true
          },
          "summary": {
            "type": "string",
            "description": "A short, plain text summary of the advisory.",
            "readOnly": true,
            "maxLength": 1024
          },
          "description": {
            "type": "string",
            "description": "A long-form Markdown-supported description of the advisory.",
            "readOnly": true
          },
          "vulnerabilities": {
            "type": "array",
            "description": "Vulnerable version range information for the advisory.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/dependabot-alert-security-vulnerability"
            }
          },
          "severity": {
            "type": "string",
            "description": "The severity of the advisory.",
            "readOnly": true,
            "enum": [
              "low",
              "medium",
              "high",
              "critical"
            ]
          },
          "cvss": {
            "type": "object",
            "description": "Details for the advisory pertaining to the Common Vulnerability Scoring System.",
            "readOnly": true,
            "properties": {
              "score": {
                "type": "number",
                "description": "The overall CVSS score of the advisory.",
                "minimum": 0,
                "maximum": 10,
                "readOnly": true
              },
              "vector_string": {
                "type": "string",
                "description": "The full CVSS vector string for the advisory.",
                "readOnly": true,
                "nullable": true
              }
            },
            "required": [
              "score",
              "vector_string"
            ],
            "additionalProperties": false
          },
          "cvss_severities": {
            "$ref": "#/components/schemas/cvss-severities"
          },
          "epss": {
            "$ref": "#/components/schemas/security-advisory-epss"
          },
          "cwes": {
            "type": "array",
            "description": "Details for the advisory pertaining to Common Weakness Enumeration.",
            "readOnly": true,
            "items": {
              "type": "object",
              "description": "A CWE weakness assigned to the advisory.",
              "readOnly": true,
              "properties": {
                "cwe_id": {
                  "type": "string",
                  "description": "The unique CWE ID.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The short, plain text name of the CWE.",
                  "readOnly": true
                }
              },
              "required": [
                "cwe_id",
                "name"
              ],
              "additionalProperties": false
            }
          },
          "identifiers": {
            "type": "array",
            "description": "Values that identify this advisory among security information sources.",
            "readOnly": true,
            "items": {
              "type": "object",
              "description": "An advisory identifier.",
              "readOnly": true,
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The type of advisory identifier.",
                  "readOnly": true,
                  "enum": [
                    "CVE",
                    "GHSA"
                  ]
                },
                "value": {
                  "type": "string",
                  "description": "The value of the advisory identifer.",
                  "readOnly": true
                }
              },
              "required": [
                "value",
                "type"
              ],
              "additionalProperties": false
            }
          },
          "references": {
            "type": "array",
            "description": "Links to additional advisory information.",
            "readOnly": true,
            "items": {
              "type": "object",
              "description": "A link to additional advisory information.",
              "readOnly": true,
              "properties": {
                "url": {
                  "type": "string",
                  "description": "The URL of the reference.",
                  "format": "uri",
                  "readOnly": true
                }
              },
              "required": [
                "url"
              ],
              "additionalProperties": false
            }
          },
          "published_at": {
            "type": "string",
            "description": "The time that the advisory was published in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "description": "The time that the advisory was last modified in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "format": "date-time",
            "readOnly": true
          },
          "withdrawn_at": {
            "type": "string",
            "description": "The time that the advisory was withdrawn in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          }
        },
        "required": [
          "ghsa_id",
          "cve_id",
          "summary",
          "description",
          "vulnerabilities",
          "severity",
          "cvss",
          "cwes",
          "identifiers",
          "references",
          "published_at",
          "updated_at",
          "withdrawn_at"
        ],
        "additionalProperties": false
      },
      "alert-url": {
        "type": "string",
        "description": "The REST API URL of the alert resource.",
        "format": "uri",
        "readOnly": true
      },
      "alert-html-url": {
        "type": "string",
        "description": "The GitHub URL of the alert resource.",
        "format": "uri",
        "readOnly": true
      },
      "alert-created-at": {
        "type": "string",
        "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "format": "date-time",
        "readOnly": true
      },
      "alert-updated-at": {
        "type": "string",
        "description": "The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "format": "date-time",
        "readOnly": true
      },
      "alert-dismissed-at": {
        "type": "string",
        "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "format": "date-time",
        "readOnly": true,
        "nullable": true
      },
      "alert-fixed-at": {
        "type": "string",
        "description": "The time that the alert was no longer detected and was considered fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "format": "date-time",
        "readOnly": true,
        "nullable": true
      },
      "alert-auto-dismissed-at": {
        "type": "string",
        "description": "The time that the alert was auto-dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "format": "date-time",
        "readOnly": true,
        "nullable": true
      },
      "dependabot-alert-with-repository": {
        "type": "object",
        "description": "A Dependabot alert.",
        "properties": {
          "number": {
            "$ref": "#/components/schemas/alert-number"
          },
          "state": {
            "type": "string",
            "description": "The state of the Dependabot alert.",
            "readOnly": true,
            "enum": [
              "auto_dismissed",
              "dismissed",
              "fixed",
              "open"
            ]
          },
          "dependency": {
            "type": "object",
            "description": "Details for the vulnerable dependency.",
            "readOnly": true,
            "properties": {
              "package": {
                "$ref": "#/components/schemas/dependabot-alert-package"
              },
              "manifest_path": {
                "type": "string",
                "description": "The full path to the dependency manifest file, relative to the root of the repository.",
                "readOnly": true
              },
              "scope": {
                "type": "string",
                "description": "The execution scope of the vulnerable dependency.",
                "readOnly": true,
                "nullable": true,
                "enum": [
                  "development",
                  "runtime"
                ]
              },
              "relationship": {
                "type": "string",
                "description": "The vulnerable dependency's relationship to your project.\n\n> [!NOTE]\n> We are rolling out support for dependency relationship across ecosystems. This value will be \"unknown\" for all dependencies in unsupported ecosystems.\n",
                "readOnly": true,
                "nullable": true,
                "enum": [
                  "unknown",
                  "direct",
                  "transitive"
                ]
              }
            }
          },
          "security_advisory": {
            "$ref": "#/components/schemas/dependabot-alert-security-advisory"
          },
          "security_vulnerability": {
            "$ref": "#/components/schemas/dependabot-alert-security-vulnerability"
          },
          "url": {
            "$ref": "#/components/schemas/alert-url"
          },
          "html_url": {
            "$ref": "#/components/schemas/alert-html-url"
          },
          "created_at": {
            "$ref": "#/components/schemas/alert-created-at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/alert-updated-at"
          },
          "dismissed_at": {
            "$ref": "#/components/schemas/alert-dismissed-at"
          },
          "dismissed_by": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "dismissed_reason": {
            "type": "string",
            "description": "The reason that the alert was dismissed.",
            "nullable": true,
            "enum": [
              "fix_started",
              "inaccurate",
              "no_bandwidth",
              "not_used",
              "tolerable_risk"
            ]
          },
          "dismissed_comment": {
            "type": "string",
            "description": "An optional comment associated with the alert's dismissal.",
            "nullable": true,
            "maxLength": 280
          },
          "fixed_at": {
            "$ref": "#/components/schemas/alert-fixed-at"
          },
          "auto_dismissed_at": {
            "$ref": "#/components/schemas/alert-auto-dismissed-at"
          },
          "repository": {
            "$ref": "#/components/schemas/simple-repository"
          }
        },
        "required": [
          "number",
          "state",
          "dependency",
          "security_advisory",
          "security_vulnerability",
          "url",
          "html_url",
          "created_at",
          "updated_at",
          "dismissed_at",
          "dismissed_by",
          "dismissed_reason",
          "dismissed_comment",
          "fixed_at",
          "repository"
        ],
        "additionalProperties": false
      },
      "nullable-alert-updated-at": {
        "type": "string",
        "description": "The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "format": "date-time",
        "readOnly": true,
        "nullable": true
      },
      "secret-scanning-alert-state": {
        "description": "Sets the state of the secret scanning alert. You must provide `resolution` when you set the state to `resolved`.",
        "type": "string",
        "enum": [
          "open",
          "resolved"
        ]
      },
      "secret-scanning-alert-resolution": {
        "type": "string",
        "description": "**Required when the `state` is `resolved`.** The reason for resolving the alert.",
        "nullable": true,
        "enum": [
          "false_positive",
          "wont_fix",
          "revoked",
          "used_in_tests"
        ]
      },
      "secret-scanning-location-commit": {
        "description": "Represents a 'commit' secret scanning location type. This location type shows that a secret was detected inside a commit to a repository.",
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "The file path in the repository",
            "example": "/example/secrets.txt"
          },
          "start_line": {
            "type": "number",
            "description": "Line number at which the secret starts in the file"
          },
          "end_line": {
            "type": "number",
            "description": "Line number at which the secret ends in the file"
          },
          "start_column": {
            "type": "number",
            "description": "The column at which the secret starts within the start line when the file is interpreted as 8BIT ASCII"
          },
          "end_column": {
            "type": "number",
            "description": "The column at which the secret ends within the end line when the file is interpreted as 8BIT ASCII"
          },
          "blob_sha": {
            "type": "string",
            "description": "SHA-1 hash ID of the associated blob",
            "example": "af5626b4a114abcb82d63db7c8082c3c4756e51b"
          },
          "blob_url": {
            "type": "string",
            "description": "The API URL to get the associated blob resource"
          },
          "commit_sha": {
            "type": "string",
            "description": "SHA-1 hash ID of the associated commit",
            "example": "af5626b4a114abcb82d63db7c8082c3c4756e51b"
          },
          "commit_url": {
            "type": "string",
            "description": "The API URL to get the associated commit resource"
          }
        },
        "required": [
          "path",
          "start_line",
          "end_line",
          "start_column",
          "end_column",
          "blob_sha",
          "blob_url",
          "commit_sha",
          "commit_url"
        ]
      },
      "secret-scanning-location-wiki-commit": {
        "description": "Represents a 'wiki_commit' secret scanning location type. This location type shows that a secret was detected inside a commit to a repository wiki.",
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "The file path of the wiki page",
            "example": "/example/Home.md"
          },
          "start_line": {
            "type": "number",
            "description": "Line number at which the secret starts in the file"
          },
          "end_line": {
            "type": "number",
            "description": "Line number at which the secret ends in the file"
          },
          "start_column": {
            "type": "number",
            "description": "The column at which the secret starts within the start line when the file is interpreted as 8-bit ASCII."
          },
          "end_column": {
            "type": "number",
            "description": "The column at which the secret ends within the end line when the file is interpreted as 8-bit ASCII."
          },
          "blob_sha": {
            "type": "string",
            "description": "SHA-1 hash ID of the associated blob",
            "example": "af5626b4a114abcb82d63db7c8082c3c4756e51b"
          },
          "page_url": {
            "type": "string",
            "description": "The GitHub URL to get the associated wiki page",
            "example": "https://github.com/octocat/Hello-World/wiki/Home/302c0b7e200761c9dd9b57e57db540ee0b4293a5"
          },
          "commit_sha": {
            "type": "string",
            "description": "SHA-1 hash ID of the associated commit",
            "example": "302c0b7e200761c9dd9b57e57db540ee0b4293a5"
          },
          "commit_url": {
            "type": "string",
            "description": "The GitHub URL to get the associated wiki commit",
            "example": "https://github.com/octocat/Hello-World/wiki/_compare/302c0b7e200761c9dd9b57e57db540ee0b4293a5"
          }
        },
        "required": [
          "path",
          "start_line",
          "end_line",
          "start_column",
          "end_column",
          "blob_sha",
          "page_url",
          "commit_sha",
          "commit_url"
        ]
      },
      "secret-scanning-location-issue-title": {
        "description": "Represents an 'issue_title' secret scanning location type. This location type shows that a secret was detected in the title of an issue.",
        "type": "object",
        "properties": {
          "issue_title_url": {
            "type": "string",
            "format": "uri",
            "description": "The API URL to get the issue where the secret was detected.",
            "example": "https://api.github.com/repos/octocat/Hello-World/issues/1347"
          }
        },
        "required": [
          "issue_title_url"
        ]
      },
      "secret-scanning-location-issue-body": {
        "description": "Represents an 'issue_body' secret scanning location type. This location type shows that a secret was detected in the body of an issue.",
        "type": "object",
        "properties": {
          "issue_body_url": {
            "type": "string",
            "format": "uri",
            "description": "The API URL to get the issue where the secret was detected.",
            "example": "https://api.github.com/repos/octocat/Hello-World/issues/1347"
          }
        },
        "required": [
          "issue_body_url"
        ]
      },
      "secret-scanning-location-issue-comment": {
        "description": "Represents an 'issue_comment' secret scanning location type. This location type shows that a secret was detected in a comment on an issue.",
        "type": "object",
        "properties": {
          "issue_comment_url": {
            "type": "string",
            "format": "uri",
            "description": "The API URL to get the issue comment where the secret was detected.",
            "example": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1081119451"
          }
        },
        "required": [
          "issue_comment_url"
        ]
      },
      "secret-scanning-location-discussion-title": {
        "description": "Represents a 'discussion_title' secret scanning location type. This location type shows that a secret was detected in the title of a discussion.",
        "type": "object",
        "properties": {
          "discussion_title_url": {
            "type": "string",
            "format": "uri",
            "description": "The URL to the discussion where the secret was detected.",
            "example": "https://github.com/community/community/discussions/39082"
          }
        },
        "required": [
          "discussion_title_url"
        ]
      },
      "secret-scanning-location-discussion-body": {
        "description": "Represents a 'discussion_body' secret scanning location type. This location type shows that a secret was detected in the body of a discussion.",
        "type": "object",
        "properties": {
          "discussion_body_url": {
            "type": "string",
            "format": "uri",
            "description": "The URL to the discussion where the secret was detected.",
            "example": "https://github.com/community/community/discussions/39082#discussion-4566270"
          }
        },
        "required": [
          "discussion_body_url"
        ]
      },
      "secret-scanning-location-discussion-comment": {
        "description": "Represents a 'discussion_comment' secret scanning location type. This location type shows that a secret was detected in a comment on a discussion.",
        "type": "object",
        "properties": {
          "discussion_comment_url": {
            "type": "string",
            "format": "uri",
            "description": "The API URL to get the discussion comment where the secret was detected.",
            "example": "https://github.com/community/community/discussions/39082#discussioncomment-4158232"
          }
        },
        "required": [
          "discussion_comment_url"
        ]
      },
      "secret-scanning-location-pull-request-title": {
        "description": "Represents a 'pull_request_title' secret scanning location type. This location type shows that a secret was detected in the title of a pull request.",
        "type": "object",
        "properties": {
          "pull_request_title_url": {
            "type": "string",
            "format": "uri",
            "description": "The API URL to get the pull request where the secret was detected.",
            "example": "https://api.github.com/repos/octocat/Hello-World/pulls/2846"
          }
        },
        "required": [
          "pull_request_title_url"
        ]
      },
      "secret-scanning-location-pull-request-body": {
        "description": "Represents a 'pull_request_body' secret scanning location type. This location type shows that a secret was detected in the body of a pull request.",
        "type": "object",
        "properties": {
          "pull_request_body_url": {
            "type": "string",
            "format": "uri",
            "description": "The API URL to get the pull request where the secret was detected.",
            "example": "https://api.github.com/repos/octocat/Hello-World/pulls/2846"
          }
        },
        "required": [
          "pull_request_body_url"
        ]
      },
      "secret-scanning-location-pull-request-comment": {
        "description": "Represents a 'pull_request_comment' secret scanning location type. This location type shows that a secret was detected in a comment on a pull request.",
        "type": "object",
        "properties": {
          "pull_request_comment_url": {
            "type": "string",
            "format": "uri",
            "description": "The API URL to get the pull request comment where the secret was detected.",
            "example": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1081119451"
          }
        },
        "required": [
          "pull_request_comment_url"
        ]
      },
      "secret-scanning-location-pull-request-review": {
        "description": "Represents a 'pull_request_review' secret scanning location type. This location type shows that a secret was detected in a review on a pull request.",
        "type": "object",
        "properties": {
          "pull_request_review_url": {
            "type": "string",
            "format": "uri",
            "description": "The API URL to get the pull request review where the secret was detected.",
            "example": "https://api.github.com/repos/octocat/Hello-World/pulls/2846/reviews/80"
          }
        },
        "required": [
          "pull_request_review_url"
        ]
      },
      "secret-scanning-location-pull-request-review-comment": {
        "description": "Represents a 'pull_request_review_comment' secret scanning location type. This location type shows that a secret was detected in a review comment on a pull request.",
        "type": "object",
        "properties": {
          "pull_request_review_comment_url": {
            "type": "string",
            "format": "uri",
            "description": "The API URL to get the pull request review comment where the secret was detected.",
            "example": "https://api.github.com/repos/octocat/Hello-World/pulls/comments/12"
          }
        },
        "required": [
          "pull_request_review_comment_url"
        ]
      },
      "nullable-secret-scanning-first-detected-location": {
        "description": "Details on the location where the token was initially detected. This can be a commit, wiki commit, issue, discussion, pull request.\n",
        "oneOf": [
          {
            "$ref": "#/components/schemas/secret-scanning-location-commit"
          },
          {
            "$ref": "#/components/schemas/secret-scanning-location-wiki-commit"
          },
          {
            "$ref": "#/components/schemas/secret-scanning-location-issue-title"
          },
          {
            "$ref": "#/components/schemas/secret-scanning-location-issue-body"
          },
          {
            "$ref": "#/components/schemas/secret-scanning-location-issue-comment"
          },
          {
            "$ref": "#/components/schemas/secret-scanning-location-discussion-title"
          },
          {
            "$ref": "#/components/schemas/secret-scanning-location-discussion-body"
          },
          {
            "$ref": "#/components/schemas/secret-scanning-location-discussion-comment"
          },
          {
            "$ref": "#/components/schemas/secret-scanning-location-pull-request-title"
          },
          {
            "$ref": "#/components/schemas/secret-scanning-location-pull-request-body"
          },
          {
            "$ref": "#/components/schemas/secret-scanning-location-pull-request-comment"
          },
          {
            "$ref": "#/components/schemas/secret-scanning-location-pull-request-review"
          },
          {
            "$ref": "#/components/schemas/secret-scanning-location-pull-request-review-comment"
          }
        ],
        "nullable": true
      },
      "organization-secret-scanning-alert": {
        "type": "object",
        "properties": {
          "number": {
            "$ref": "#/components/schemas/alert-number"
          },
          "created_at": {
            "$ref": "#/components/schemas/alert-created-at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/nullable-alert-updated-at"
          },
          "url": {
            "$ref": "#/components/schemas/alert-url"
          },
          "html_url": {
            "$ref": "#/components/schemas/alert-html-url"
          },
          "locations_url": {
            "type": "string",
            "format": "uri",
            "description": "The REST API URL of the code locations for this alert."
          },
          "state": {
            "$ref": "#/components/schemas/secret-scanning-alert-state"
          },
          "resolution": {
            "$ref": "#/components/schemas/secret-scanning-alert-resolution"
          },
          "resolved_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time that the alert was resolved in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "nullable": true
          },
          "resolved_by": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "secret_type": {
            "type": "string",
            "description": "The type of secret that secret scanning detected."
          },
          "secret_type_display_name": {
            "type": "string",
            "description": "User-friendly name for the detected secret, matching the `secret_type`.\nFor a list of built-in patterns, see \"[Supported secret scanning patterns](https://docs.github.com/code-security/secret-scanning/introduction/supported-secret-scanning-patterns#supported-secrets).\""
          },
          "secret": {
            "type": "string",
            "description": "The secret that was detected."
          },
          "repository": {
            "$ref": "#/components/schemas/simple-repository"
          },
          "push_protection_bypassed": {
            "type": "boolean",
            "description": "Whether push protection was bypassed for the detected secret.",
            "nullable": true
          },
          "push_protection_bypassed_by": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "push_protection_bypassed_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time that push protection was bypassed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "nullable": true
          },
          "push_protection_bypass_request_reviewer": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "push_protection_bypass_request_reviewer_comment": {
            "type": "string",
            "description": "An optional comment when reviewing a push protection bypass.",
            "nullable": true
          },
          "push_protection_bypass_request_comment": {
            "type": "string",
            "description": "An optional comment when requesting a push protection bypass.",
            "nullable": true
          },
          "push_protection_bypass_request_html_url": {
            "type": "string",
            "format": "uri",
            "description": "The URL to a push protection bypass request.",
            "nullable": true
          },
          "resolution_comment": {
            "type": "string",
            "description": "The comment that was optionally added when this alert was closed",
            "nullable": true
          },
          "validity": {
            "type": "string",
            "description": "The token status as of the latest validity check.",
            "enum": [
              "active",
              "inactive",
              "unknown"
            ]
          },
          "publicly_leaked": {
            "type": "boolean",
            "description": "Whether the secret was publicly leaked.",
            "nullable": true
          },
          "multi_repo": {
            "type": "boolean",
            "description": "Whether the detected secret was found in multiple repositories in the same organization or enterprise.",
            "nullable": true
          },
          "is_base64_encoded": {
            "type": "boolean",
            "description": "A boolean value representing whether or not alert is base64 encoded",
            "nullable": true
          },
          "first_location_detected": {
            "$ref": "#/components/schemas/nullable-secret-scanning-first-detected-location"
          },
          "has_more_locations": {
            "type": "boolean",
            "description": "A boolean value representing whether or not the token in the alert was detected in more than one location."
          }
        }
      },
      "actor": {
        "title": "Actor",
        "description": "Actor",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "login": {
            "type": "string"
          },
          "display_login": {
            "type": "string"
          },
          "gravatar_id": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "avatar_url": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "id",
          "login",
          "gravatar_id",
          "url",
          "avatar_url"
        ]
      },
      "nullable-milestone": {
        "title": "Milestone",
        "description": "A collection of related issues and pull requests.",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/milestones/1"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World/milestones/v1.0"
          },
          "labels_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels"
          },
          "id": {
            "type": "integer",
            "example": 1002604
          },
          "node_id": {
            "type": "string",
            "example": "MDk6TWlsZXN0b25lMTAwMjYwNA=="
          },
          "number": {
            "description": "The number of the milestone.",
            "type": "integer",
            "example": 42
          },
          "state": {
            "description": "The state of the milestone.",
            "example": "open",
            "type": "string",
            "enum": [
              "open",
              "closed"
            ],
            "default": "open"
          },
          "title": {
            "description": "The title of the milestone.",
            "example": "v1.0",
            "type": "string"
          },
          "description": {
            "type": "string",
            "example": "Tracking milestone for version 1.0",
            "nullable": true
          },
          "creator": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "open_issues": {
            "type": "integer",
            "example": 4
          },
          "closed_issues": {
            "type": "integer",
            "example": 8
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-04-10T20:09:31Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2014-03-03T18:58:10Z"
          },
          "closed_at": {
            "type": "string",
            "format": "date-time",
            "example": "2013-02-12T13:22:01Z",
            "nullable": true
          },
          "due_on": {
            "type": "string",
            "format": "date-time",
            "example": "2012-10-09T23:39:01Z",
            "nullable": true
          }
        },
        "required": [
          "closed_issues",
          "creator",
          "description",
          "due_on",
          "closed_at",
          "id",
          "node_id",
          "labels_url",
          "html_url",
          "number",
          "open_issues",
          "state",
          "title",
          "url",
          "created_at",
          "updated_at"
        ],
        "nullable": true
      },
      "issue-type": {
        "title": "Issue Type",
        "description": "The type of issue.",
        "type": "object",
        "nullable": true,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The unique identifier of the issue type."
          },
          "node_id": {
            "type": "string",
            "description": "The node identifier of the issue type."
          },
          "name": {
            "type": "string",
            "description": "The name of the issue type."
          },
          "description": {
            "type": "string",
            "description": "The description of the issue type.",
            "nullable": true
          },
          "color": {
            "type": "string",
            "description": "The color of the issue type.",
            "enum": [
              "gray",
              "blue",
              "green",
              "yellow",
              "orange",
              "red",
              "pink",
              "purple"
            ],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "The time the issue type created.",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "description": "The time the issue type last updated.",
            "format": "date-time"
          },
          "is_enabled": {
            "type": "boolean",
            "description": "The enabled state of the issue type."
          }
        },
        "required": [
          "id",
          "node_id",
          "name",
          "description"
        ]
      },
      "nullable-integration": {
        "title": "GitHub app",
        "description": "GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.",
        "type": "object",
        "nullable": true,
        "properties": {
          "id": {
            "description": "Unique identifier of the GitHub app",
            "example": 37,
            "type": "integer"
          },
          "slug": {
            "description": "The slug name of the GitHub app",
            "example": "probot-owners",
            "type": "string"
          },
          "node_id": {
            "type": "string",
            "example": "MDExOkludGVncmF0aW9uMQ=="
          },
          "client_id": {
            "type": "string",
            "example": "\"Iv1.25b5d1e65ffc4022\""
          },
          "owner": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/simple-user"
              },
              {
                "$ref": "#/components/schemas/enterprise"
              }
            ]
          },
          "name": {
            "description": "The name of the GitHub app",
            "example": "Probot Owners",
            "type": "string"
          },
          "description": {
            "type": "string",
            "example": "The description of the app.",
            "nullable": true
          },
          "external_url": {
            "type": "string",
            "format": "uri",
            "example": "https://example.com"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/apps/super-ci"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2017-07-08T16:18:44-04:00"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2017-07-08T16:18:44-04:00"
          },
          "permissions": {
            "description": "The set of permissions for the GitHub app",
            "type": "object",
            "properties": {
              "issues": {
                "type": "string"
              },
              "checks": {
                "type": "string"
              },
              "metadata": {
                "type": "string"
              },
              "contents": {
                "type": "string"
              },
              "deployments": {
                "type": "string"
              }
            },
            "additionalProperties": {
              "type": "string"
            },
            "example": {
              "issues": "read",
              "deployments": "write"
            }
          },
          "events": {
            "description": "The list of events for the GitHub app. Note that the `installation_target`, `security_advisory`, and `meta` events are not included because they are global events and not specific to an installation.",
            "example": [
              "label",
              "deployment"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "installations_count": {
            "description": "The number of installations associated with the GitHub app. Only returned when the integration is requesting details about itself.",
            "example": 5,
            "type": "integer"
          }
        },
        "required": [
          "id",
          "node_id",
          "owner",
          "name",
          "description",
          "external_url",
          "html_url",
          "created_at",
          "updated_at",
          "permissions",
          "events"
        ]
      },
      "author-association": {
        "title": "author_association",
        "type": "string",
        "example": "OWNER",
        "description": "How the author is associated with the repository.",
        "enum": [
          "COLLABORATOR",
          "CONTRIBUTOR",
          "FIRST_TIMER",
          "FIRST_TIME_CONTRIBUTOR",
          "MANNEQUIN",
          "MEMBER",
          "NONE",
          "OWNER"
        ]
      },
      "reaction-rollup": {
        "title": "Reaction Rollup",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          },
          "total_count": {
            "type": "integer"
          },
          "+1": {
            "type": "integer"
          },
          "-1": {
            "type": "integer"
          },
          "laugh": {
            "type": "integer"
          },
          "confused": {
            "type": "integer"
          },
          "heart": {
            "type": "integer"
          },
          "hooray": {
            "type": "integer"
          },
          "eyes": {
            "type": "integer"
          },
          "rocket": {
            "type": "integer"
          }
        },
        "required": [
          "url",
          "total_count",
          "+1",
          "-1",
          "laugh",
          "confused",
          "heart",
          "hooray",
          "eyes",
          "rocket"
        ]
      },
      "sub-issues-summary": {
        "title": "Sub-issues Summary",
        "type": "object",
        "properties": {
          "total": {
            "type": "integer"
          },
          "completed": {
            "type": "integer"
          },
          "percent_completed": {
            "type": "integer"
          }
        },
        "required": [
          "total",
          "completed",
          "percent_completed"
        ]
      },
      "issue-dependencies-summary": {
        "title": "Issue Dependencies Summary",
        "type": "object",
        "properties": {
          "blocked_by": {
            "type": "integer"
          },
          "blocking": {
            "type": "integer"
          },
          "total_blocked_by": {
            "type": "integer"
          },
          "total_blocking": {
            "type": "integer"
          }
        },
        "required": [
          "blocked_by",
          "blocking",
          "total_blocked_by",
          "total_blocking"
        ]
      },
      "issue-field-value": {
        "title": "Issue Field Value",
        "description": "A value assigned to an issue field",
        "type": "object",
        "properties": {
          "issue_field_id": {
            "description": "Unique identifier for the issue field.",
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "node_id": {
            "type": "string",
            "example": "IFT_GDKND"
          },
          "data_type": {
            "description": "The data type of the issue field",
            "type": "string",
            "enum": [
              "text",
              "single_select",
              "number",
              "date"
            ],
            "example": "text"
          },
          "value": {
            "description": "The value of the issue field",
            "anyOf": [
              {
                "type": "string",
                "example": "Sample text"
              },
              {
                "type": "number",
                "example": 42.5
              },
              {
                "type": "integer",
                "example": 1
              }
            ],
            "nullable": true
          },
          "single_select_option": {
            "description": "Details about the selected option (only present for single_select fields)",
            "type": "object",
            "properties": {
              "id": {
                "description": "Unique identifier for the option.",
                "type": "integer",
                "format": "int64",
                "example": 1
              },
              "name": {
                "description": "The name of the option",
                "type": "string",
                "example": "High"
              },
              "color": {
                "description": "The color of the option",
                "type": "string",
                "example": "red"
              }
            },
            "required": [
              "id",
              "name",
              "color"
            ],
            "nullable": true
          }
        },
        "required": [
          "issue_field_id",
          "node_id",
          "data_type",
          "value"
        ]
      },
      "issue": {
        "title": "Issue",
        "description": "Issues are a great way to keep track of tasks, enhancements, and bugs for your projects.",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "node_id": {
            "type": "string"
          },
          "url": {
            "description": "URL for the issue",
            "example": "https://api.github.com/repositories/42/issues/1",
            "type": "string",
            "format": "uri"
          },
          "repository_url": {
            "type": "string",
            "format": "uri"
          },
          "labels_url": {
            "type": "string"
          },
          "comments_url": {
            "type": "string",
            "format": "uri"
          },
          "events_url": {
            "type": "string",
            "format": "uri"
          },
          "html_url": {
            "type": "string",
            "format": "uri"
          },
          "number": {
            "description": "Number uniquely identifying the issue within its repository",
            "example": 42,
            "type": "integer"
          },
          "state": {
            "description": "State of the issue; either 'open' or 'closed'",
            "example": "open",
            "type": "string"
          },
          "state_reason": {
            "description": "The reason for the current state",
            "example": "not_planned",
            "type": "string",
            "nullable": true,
            "enum": [
              "completed",
              "reopened",
              "not_planned",
              "duplicate"
            ]
          },
          "title": {
            "description": "Title of the issue",
            "example": "Widget creation fails in Safari on OS X 10.8",
            "type": "string"
          },
          "body": {
            "description": "Contents of the issue",
            "example": "It looks like the new widget form is broken on Safari. When I try and create the widget, Safari crashes. This is reproducible on 10.8, but not 10.9. Maybe a browser bug?",
            "type": "string",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "labels": {
            "description": "Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository",
            "example": [
              "bug",
              "registration"
            ],
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "node_id": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string",
                      "format": "uri"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "color": {
                      "type": "string",
                      "nullable": true
                    },
                    "default": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "assignee": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "assignees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/simple-user"
            },
            "nullable": true
          },
          "milestone": {
            "$ref": "#/components/schemas/nullable-milestone"
          },
          "locked": {
            "type": "boolean"
          },
          "active_lock_reason": {
            "type": "string",
            "nullable": true
          },
          "comments": {
            "type": "integer"
          },
          "pull_request": {
            "type": "object",
            "properties": {
              "merged_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "diff_url": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "html_url": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "patch_url": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "url": {
                "type": "string",
                "format": "uri",
                "nullable": true
              }
            },
            "required": [
              "diff_url",
              "html_url",
              "patch_url",
              "url"
            ]
          },
          "closed_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "draft": {
            "type": "boolean"
          },
          "closed_by": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "body_html": {
            "type": "string"
          },
          "body_text": {
            "type": "string"
          },
          "timeline_url": {
            "type": "string",
            "format": "uri"
          },
          "type": {
            "$ref": "#/components/schemas/issue-type"
          },
          "repository": {
            "$ref": "#/components/schemas/repository"
          },
          "performed_via_github_app": {
            "$ref": "#/components/schemas/nullable-integration"
          },
          "author_association": {
            "$ref": "#/components/schemas/author-association"
          },
          "reactions": {
            "$ref": "#/components/schemas/reaction-rollup"
          },
          "sub_issues_summary": {
            "$ref": "#/components/schemas/sub-issues-summary"
          },
          "parent_issue_url": {
            "description": "URL to get the parent issue of this issue, if it is a sub-issue",
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "issue_dependencies_summary": {
            "$ref": "#/components/schemas/issue-dependencies-summary"
          },
          "issue_field_values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/issue-field-value"
            }
          }
        },
        "required": [
          "assignee",
          "closed_at",
          "comments",
          "comments_url",
          "events_url",
          "html_url",
          "id",
          "node_id",
          "labels",
          "labels_url",
          "milestone",
          "number",
          "repository_url",
          "state",
          "locked",
          "title",
          "url",
          "user",
          "author_association",
          "created_at",
          "updated_at"
        ]
      },
      "issue-comment": {
        "title": "Issue Comment",
        "description": "Comments provide a way for people to collaborate on an issue.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the issue comment",
            "example": 42,
            "type": "integer",
            "format": "int64"
          },
          "node_id": {
            "type": "string"
          },
          "url": {
            "description": "URL for the issue comment",
            "example": "https://api.github.com/repositories/42/issues/comments/1",
            "type": "string",
            "format": "uri"
          },
          "body": {
            "description": "Contents of the issue comment",
            "example": "What version of Safari were you using when you observed this bug?",
            "type": "string"
          },
          "body_text": {
            "type": "string"
          },
          "body_html": {
            "type": "string"
          },
          "html_url": {
            "type": "string",
            "format": "uri"
          },
          "user": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-04-14T16:00:49Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-04-14T16:00:49Z"
          },
          "issue_url": {
            "type": "string",
            "format": "uri"
          },
          "author_association": {
            "$ref": "#/components/schemas/author-association"
          },
          "performed_via_github_app": {
            "$ref": "#/components/schemas/nullable-integration"
          },
          "reactions": {
            "$ref": "#/components/schemas/reaction-rollup"
          }
        },
        "required": [
          "id",
          "node_id",
          "html_url",
          "issue_url",
          "author_association",
          "user",
          "url",
          "created_at",
          "updated_at"
        ]
      },
      "event": {
        "title": "Event",
        "description": "Event",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "actor": {
            "$ref": "#/components/schemas/actor"
          },
          "repo": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "id",
              "name",
              "url"
            ]
          },
          "org": {
            "$ref": "#/components/schemas/actor"
          },
          "payload": {
            "type": "object",
            "properties": {
              "action": {
                "type": "string"
              },
              "issue": {
                "$ref": "#/components/schemas/issue"
              },
              "comment": {
                "$ref": "#/components/schemas/issue-comment"
              },
              "pages": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "page_name": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "summary": {
                      "type": "string",
                      "nullable": true
                    },
                    "action": {
                      "type": "string"
                    },
                    "sha": {
                      "type": "string"
                    },
                    "html_url": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "public": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "id",
          "type",
          "actor",
          "repo",
          "payload",
          "public",
          "created_at"
        ]
      },
      "link-with-type": {
        "title": "Link With Type",
        "description": "Hypermedia Link with Type",
        "type": "object",
        "properties": {
          "href": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "href",
          "type"
        ]
      },
      "feed": {
        "title": "Feed",
        "description": "Feed",
        "type": "object",
        "properties": {
          "timeline_url": {
            "type": "string",
            "example": "https://github.com/timeline"
          },
          "user_url": {
            "type": "string",
            "example": "https://github.com/{user}"
          },
          "current_user_public_url": {
            "type": "string",
            "example": "https://github.com/octocat"
          },
          "current_user_url": {
            "type": "string",
            "example": "https://github.com/octocat.private?token=abc123"
          },
          "current_user_actor_url": {
            "type": "string",
            "example": "https://github.com/octocat.private.actor?token=abc123"
          },
          "current_user_organization_url": {
            "type": "string",
            "example": "https://github.com/octocat-org"
          },
          "current_user_organization_urls": {
            "type": "array",
            "example": [
              "https://github.com/organizations/github/octocat.private.atom?token=abc123"
            ],
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "security_advisories_url": {
            "type": "string",
            "example": "https://github.com/security-advisories"
          },
          "repository_discussions_url": {
            "type": "string",
            "example": "https://github.com/{user}/{repo}/discussions",
            "description": "A feed of discussions for a given repository."
          },
          "repository_discussions_category_url": {
            "type": "string",
            "example": "https://github.com/{user}/{repo}/discussions/categories/{category}",
            "description": "A feed of discussions for a given repository and category."
          },
          "_links": {
            "type": "object",
            "properties": {
              "timeline": {
                "$ref": "#/components/schemas/link-with-type"
              },
              "user": {
                "$ref": "#/components/schemas/link-with-type"
              },
              "security_advisories": {
                "$ref": "#/components/schemas/link-with-type"
              },
              "current_user": {
                "$ref": "#/components/schemas/link-with-type"
              },
              "current_user_public": {
                "$ref": "#/components/schemas/link-with-type"
              },
              "current_user_actor": {
                "$ref": "#/components/schemas/link-with-type"
              },
              "current_user_organization": {
                "$ref": "#/components/schemas/link-with-type"
              },
              "current_user_organizations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/link-with-type"
                }
              },
              "repository_discussions": {
                "$ref": "#/components/schemas/link-with-type"
              },
              "repository_discussions_category": {
                "$ref": "#/components/schemas/link-with-type"
              }
            },
            "required": [
              "timeline",
              "user"
            ]
          }
        },
        "required": [
          "_links",
          "timeline_url",
          "user_url"
        ]
      },
      "base-gist": {
        "title": "Base Gist",
        "description": "Base Gist",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          },
          "forks_url": {
            "type": "string",
            "format": "uri"
          },
          "commits_url": {
            "type": "string",
            "format": "uri"
          },
          "id": {
            "type": "string"
          },
          "node_id": {
            "type": "string"
          },
          "git_pull_url": {
            "type": "string",
            "format": "uri"
          },
          "git_push_url": {
            "type": "string",
            "format": "uri"
          },
          "html_url": {
            "type": "string",
            "format": "uri"
          },
          "files": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "filename": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "language": {
                  "type": "string"
                },
                "raw_url": {
                  "type": "string"
                },
                "size": {
                  "type": "integer"
                },
                "encoding": {
                  "type": "string",
                  "description": "The encoding used for `content`. Currently, `\"utf-8\"` and `\"base64\"` are supported.",
                  "default": "utf-8"
                }
              }
            }
          },
          "public": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "comments": {
            "type": "integer"
          },
          "comments_enabled": {
            "type": "boolean"
          },
          "user": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "comments_url": {
            "type": "string",
            "format": "uri"
          },
          "owner": {
            "$ref": "#/components/schemas/simple-user"
          },
          "truncated": {
            "type": "boolean"
          },
          "forks": {
            "type": "array",
            "items": {}
          },
          "history": {
            "type": "array",
            "items": {}
          }
        },
        "required": [
          "id",
          "node_id",
          "url",
          "forks_url",
          "commits_url",
          "git_pull_url",
          "git_push_url",
          "html_url",
          "comments_url",
          "public",
          "description",
          "comments",
          "user",
          "files",
          "created_at",
          "updated_at"
        ]
      },
      "public-user": {
        "title": "Public User",
        "description": "Public User",
        "type": "object",
        "properties": {
          "login": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "user_view_type": {
            "type": "string"
          },
          "node_id": {
            "type": "string"
          },
          "avatar_url": {
            "type": "string",
            "format": "uri"
          },
          "gravatar_id": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "html_url": {
            "type": "string",
            "format": "uri"
          },
          "followers_url": {
            "type": "string",
            "format": "uri"
          },
          "following_url": {
            "type": "string"
          },
          "gists_url": {
            "type": "string"
          },
          "starred_url": {
            "type": "string"
          },
          "subscriptions_url": {
            "type": "string",
            "format": "uri"
          },
          "organizations_url": {
            "type": "string",
            "format": "uri"
          },
          "repos_url": {
            "type": "string",
            "format": "uri"
          },
          "events_url": {
            "type": "string"
          },
          "received_events_url": {
            "type": "string",
            "format": "uri"
          },
          "type": {
            "type": "string"
          },
          "site_admin": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "company": {
            "type": "string",
            "nullable": true
          },
          "blog": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "notification_email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "hireable": {
            "type": "boolean",
            "nullable": true
          },
          "bio": {
            "type": "string",
            "nullable": true
          },
          "twitter_username": {
            "type": "string",
            "nullable": true
          },
          "public_repos": {
            "type": "integer"
          },
          "public_gists": {
            "type": "integer"
          },
          "followers": {
            "type": "integer"
          },
          "following": {
            "type": "integer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "plan": {
            "type": "object",
            "properties": {
              "collaborators": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "space": {
                "type": "integer"
              },
              "private_repos": {
                "type": "integer"
              }
            },
            "required": [
              "collaborators",
              "name",
              "space",
              "private_repos"
            ]
          },
          "private_gists": {
            "type": "integer",
            "example": 1
          },
          "total_private_repos": {
            "type": "integer",
            "example": 2
          },
          "owned_private_repos": {
            "type": "integer",
            "example": 2
          },
          "disk_usage": {
            "type": "integer",
            "example": 1
          },
          "collaborators": {
            "type": "integer",
            "example": 3
          }
        },
        "required": [
          "avatar_url",
          "events_url",
          "followers_url",
          "following_url",
          "gists_url",
          "gravatar_id",
          "html_url",
          "id",
          "node_id",
          "login",
          "organizations_url",
          "received_events_url",
          "repos_url",
          "site_admin",
          "starred_url",
          "subscriptions_url",
          "type",
          "url",
          "bio",
          "blog",
          "company",
          "email",
          "followers",
          "following",
          "hireable",
          "location",
          "name",
          "public_gists",
          "public_repos",
          "created_at",
          "updated_at"
        ],
        "additionalProperties": false
      },
      "gist-history": {
        "title": "Gist History",
        "description": "Gist History",
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "version": {
            "type": "string"
          },
          "committed_at": {
            "type": "string",
            "format": "date-time"
          },
          "change_status": {
            "type": "object",
            "properties": {
              "total": {
                "type": "integer"
              },
              "additions": {
                "type": "integer"
              },
              "deletions": {
                "type": "integer"
              }
            }
          },
          "url": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "gist-simple": {
        "title": "Gist Simple",
        "description": "Gist Simple",
        "type": "object",
        "properties": {
          "forks": {
            "deprecated": true,
            "nullable": true,
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "url": {
                  "type": "string",
                  "format": "uri"
                },
                "user": {
                  "$ref": "#/components/schemas/public-user"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "history": {
            "deprecated": true,
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/gist-history"
            }
          },
          "fork_of": {
            "nullable": true,
            "title": "Gist",
            "description": "Gist",
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri"
              },
              "forks_url": {
                "type": "string",
                "format": "uri"
              },
              "commits_url": {
                "type": "string",
                "format": "uri"
              },
              "id": {
                "type": "string"
              },
              "node_id": {
                "type": "string"
              },
              "git_pull_url": {
                "type": "string",
                "format": "uri"
              },
              "git_push_url": {
                "type": "string",
                "format": "uri"
              },
              "html_url": {
                "type": "string",
                "format": "uri"
              },
              "files": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "filename": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "language": {
                      "type": "string"
                    },
                    "raw_url": {
                      "type": "string"
                    },
                    "size": {
                      "type": "integer"
                    }
                  }
                }
              },
              "public": {
                "type": "boolean"
              },
              "created_at": {
                "type": "string",
                "format": "date-time"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "comments": {
                "type": "integer"
              },
              "comments_enabled": {
                "type": "boolean"
              },
              "user": {
                "$ref": "#/components/schemas/nullable-simple-user"
              },
              "comments_url": {
                "type": "string",
                "format": "uri"
              },
              "owner": {
                "$ref": "#/components/schemas/nullable-simple-user"
              },
              "truncated": {
                "type": "boolean"
              },
              "forks": {
                "type": "array",
                "items": {}
              },
              "history": {
                "type": "array",
                "items": {}
              }
            },
            "required": [
              "id",
              "node_id",
              "url",
              "forks_url",
              "commits_url",
              "git_pull_url",
              "git_push_url",
              "html_url",
              "comments_url",
              "public",
              "description",
              "comments",
              "user",
              "files",
              "created_at",
              "updated_at"
            ]
          },
          "url": {
            "type": "string"
          },
          "forks_url": {
            "type": "string"
          },
          "commits_url": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "node_id": {
            "type": "string"
          },
          "git_pull_url": {
            "type": "string"
          },
          "git_push_url": {
            "type": "string"
          },
          "html_url": {
            "type": "string"
          },
          "files": {
            "type": "object",
            "additionalProperties": {
              "nullable": true,
              "type": "object",
              "properties": {
                "filename": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "language": {
                  "type": "string"
                },
                "raw_url": {
                  "type": "string"
                },
                "size": {
                  "type": "integer"
                },
                "truncated": {
                  "type": "boolean"
                },
                "content": {
                  "type": "string"
                },
                "encoding": {
                  "type": "string",
                  "description": "The encoding used for `content`. Currently, `\"utf-8\"` and `\"base64\"` are supported.",
                  "default": "utf-8"
                }
              }
            }
          },
          "public": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "comments": {
            "type": "integer"
          },
          "comments_enabled": {
            "type": "boolean"
          },
          "user": {
            "type": "string",
            "nullable": true
          },
          "comments_url": {
            "type": "string"
          },
          "owner": {
            "$ref": "#/components/schemas/simple-user"
          },
          "truncated": {
            "type": "boolean"
          }
        }
      },
      "gist-comment": {
        "title": "Gist Comment",
        "description": "A comment made to a gist.",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "node_id": {
            "type": "string",
            "example": "MDExOkdpc3RDb21tZW50MQ=="
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/gists/a6db0bec360bb87e9418/comments/1"
          },
          "body": {
            "description": "The comment text.",
            "type": "string",
            "maxLength": 65535,
            "example": "Body of the attachment"
          },
          "user": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-04-18T23:23:56Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-04-18T23:23:56Z"
          },
          "author_association": {
            "$ref": "#/components/schemas/author-association"
          }
        },
        "required": [
          "url",
          "id",
          "node_id",
          "user",
          "body",
          "author_association",
          "created_at",
          "updated_at"
        ]
      },
      "gist-commit": {
        "title": "Gist Commit",
        "description": "Gist Commit",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/gists/aa5a315d61ae9438b18d/57a7f021a713b1c5a6a199b54cc514735d2d462f"
          },
          "version": {
            "type": "string",
            "example": "57a7f021a713b1c5a6a199b54cc514735d2d462f"
          },
          "user": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "change_status": {
            "type": "object",
            "properties": {
              "total": {
                "type": "integer"
              },
              "additions": {
                "type": "integer"
              },
              "deletions": {
                "type": "integer"
              }
            }
          },
          "committed_at": {
            "type": "string",
            "format": "date-time",
            "example": "2010-04-14T02:15:15Z"
          }
        },
        "required": [
          "url",
          "user",
          "version",
          "committed_at",
          "change_status"
        ]
      },
      "gitignore-template": {
        "title": "Gitignore Template",
        "description": "Gitignore Template",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "C"
          },
          "source": {
            "type": "string",
            "example": "# Object files\n*.o\n\n# Libraries\n*.lib\n*.a\n\n# Shared objects (inc. Windows DLLs)\n*.dll\n*.so\n*.so.*\n*.dylib\n\n# Executables\n*.exe\n*.out\n*.app\n"
          }
        },
        "required": [
          "name",
          "source"
        ]
      },
      "license-simple": {
        "title": "License Simple",
        "description": "License Simple",
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "example": "mit"
          },
          "name": {
            "type": "string",
            "example": "MIT License"
          },
          "url": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "https://api.github.com/licenses/mit"
          },
          "spdx_id": {
            "type": "string",
            "nullable": true,
            "example": "MIT"
          },
          "node_id": {
            "type": "string",
            "example": "MDc6TGljZW5zZW1pdA=="
          },
          "html_url": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "key",
          "name",
          "url",
          "spdx_id",
          "node_id"
        ]
      },
      "license": {
        "title": "License",
        "description": "License",
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "example": "mit"
          },
          "name": {
            "type": "string",
            "example": "MIT License"
          },
          "spdx_id": {
            "type": "string",
            "example": "MIT",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/licenses/mit",
            "nullable": true
          },
          "node_id": {
            "type": "string",
            "example": "MDc6TGljZW5zZW1pdA=="
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "http://choosealicense.com/licenses/mit/"
          },
          "description": {
            "type": "string",
            "example": "A permissive license that is short and to the point. It lets people do anything with your code with proper attribution and without warranty."
          },
          "implementation": {
            "type": "string",
            "example": "Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file. Replace [year] with the current year and [fullname] with the name (or names) of the copyright holders."
          },
          "permissions": {
            "type": "array",
            "example": [
              "commercial-use",
              "modifications",
              "distribution",
              "sublicense",
              "private-use"
            ],
            "items": {
              "type": "string"
            }
          },
          "conditions": {
            "type": "array",
            "example": [
              "include-copyright"
            ],
            "items": {
              "type": "string"
            }
          },
          "limitations": {
            "type": "array",
            "example": [
              "no-liability"
            ],
            "items": {
              "type": "string"
            }
          },
          "body": {
            "type": "string",
            "example": "\n\nThe MIT License (MIT)\n\nCopyright (c) [year] [fullname]\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
          },
          "featured": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "key",
          "name",
          "url",
          "spdx_id",
          "node_id",
          "html_url",
          "description",
          "implementation",
          "permissions",
          "conditions",
          "limitations",
          "body",
          "featured"
        ]
      },
      "marketplace-listing-plan": {
        "title": "Marketplace Listing Plan",
        "description": "Marketplace Listing Plan",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/marketplace_listing/plans/1313"
          },
          "accounts_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/marketplace_listing/plans/1313/accounts"
          },
          "id": {
            "type": "integer",
            "example": 1313
          },
          "number": {
            "type": "integer",
            "example": 3
          },
          "name": {
            "type": "string",
            "example": "Pro"
          },
          "description": {
            "type": "string",
            "example": "A professional-grade CI solution"
          },
          "monthly_price_in_cents": {
            "type": "integer",
            "example": 1099
          },
          "yearly_price_in_cents": {
            "type": "integer",
            "example": 11870
          },
          "price_model": {
            "type": "string",
            "enum": [
              "FREE",
              "FLAT_RATE",
              "PER_UNIT"
            ],
            "example": "FLAT_RATE"
          },
          "has_free_trial": {
            "type": "boolean",
            "example": true
          },
          "unit_name": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "example": "published"
          },
          "bullets": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Up to 25 private repositories",
              "11 concurrent builds"
            ]
          }
        },
        "required": [
          "url",
          "accounts_url",
          "id",
          "number",
          "name",
          "description",
          "has_free_trial",
          "price_model",
          "unit_name",
          "monthly_price_in_cents",
          "state",
          "yearly_price_in_cents",
          "bullets"
        ]
      },
      "marketplace-purchase": {
        "title": "Marketplace Purchase",
        "description": "Marketplace Purchase",
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "login": {
            "type": "string"
          },
          "organization_billing_email": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "marketplace_pending_change": {
            "type": "object",
            "properties": {
              "is_installed": {
                "type": "boolean"
              },
              "effective_date": {
                "type": "string"
              },
              "unit_count": {
                "type": "integer",
                "nullable": true
              },
              "id": {
                "type": "integer"
              },
              "plan": {
                "$ref": "#/components/schemas/marketplace-listing-plan"
              }
            },
            "nullable": true
          },
          "marketplace_purchase": {
            "type": "object",
            "properties": {
              "billing_cycle": {
                "type": "string"
              },
              "next_billing_date": {
                "type": "string",
                "nullable": true
              },
              "is_installed": {
                "type": "boolean"
              },
              "unit_count": {
                "type": "integer",
                "nullable": true
              },
              "on_free_trial": {
                "type": "boolean"
              },
              "free_trial_ends_on": {
                "type": "string",
                "nullable": true
              },
              "updated_at": {
                "type": "string"
              },
              "plan": {
                "$ref": "#/components/schemas/marketplace-listing-plan"
              }
            }
          }
        },
        "required": [
          "url",
          "id",
          "type",
          "login",
          "marketplace_purchase"
        ]
      },
      "api-overview": {
        "title": "Api Overview",
        "description": "Api Overview",
        "type": "object",
        "properties": {
          "verifiable_password_authentication": {
            "type": "boolean",
            "example": true
          },
          "ssh_key_fingerprints": {
            "type": "object",
            "properties": {
              "SHA256_RSA": {
                "type": "string"
              },
              "SHA256_DSA": {
                "type": "string"
              },
              "SHA256_ECDSA": {
                "type": "string"
              },
              "SHA256_ED25519": {
                "type": "string"
              }
            }
          },
          "ssh_keys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ssh-ed25519 ABCDEFGHIJKLMNOPQRSTUVWXYZ"
            ]
          },
          "hooks": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "192.0.2.1"
            ]
          },
          "github_enterprise_importer": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "192.0.2.1"
            ]
          },
          "web": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "192.0.2.1"
            ]
          },
          "api": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "192.0.2.1"
            ]
          },
          "git": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "192.0.2.1"
            ]
          },
          "packages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "192.0.2.1"
            ]
          },
          "pages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "192.0.2.1"
            ]
          },
          "importer": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "192.0.2.1"
            ]
          },
          "actions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "192.0.2.1"
            ]
          },
          "actions_macos": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "192.0.2.1"
            ]
          },
          "codespaces": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "192.0.2.1"
            ]
          },
          "dependabot": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "192.0.2.1"
            ]
          },
          "copilot": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "192.0.2.1"
            ]
          },
          "domains": {
            "type": "object",
            "properties": {
              "website": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": [
                    "example.com"
                  ]
                }
              },
              "codespaces": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": [
                    "example.com"
                  ]
                }
              },
              "copilot": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": [
                    "example.com"
                  ]
                }
              },
              "packages": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": [
                    "example.com"
                  ]
                }
              },
              "actions": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": [
                    "example.com"
                  ]
                }
              },
              "actions_inbound": {
                "type": "object",
                "properties": {
                  "full_domains": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": [
                        "example.com"
                      ]
                    }
                  },
                  "wildcard_domains": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": [
                        "example.com"
                      ]
                    }
                  }
                }
              },
              "artifact_attestations": {
                "type": "object",
                "properties": {
                  "trust_domain": {
                    "type": "string",
                    "example": [
                      "example"
                    ]
                  },
                  "services": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": [
                        "example.com"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "verifiable_password_authentication"
        ]
      },
      "security-and-analysis": {
        "nullable": true,
        "type": "object",
        "properties": {
          "advanced_security": {
            "description": "Enable or disable GitHub Advanced Security for the repository.\n\nFor standalone Code Scanning or Secret Protection products, this parameter cannot be used.\n",
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "enabled",
                  "disabled"
                ]
              }
            }
          },
          "code_security": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "enabled",
                  "disabled"
                ]
              }
            }
          },
          "dependabot_security_updates": {
            "description": "Enable or disable Dependabot security updates for the repository.",
            "type": "object",
            "properties": {
              "status": {
                "description": "The enablement status of Dependabot security updates for the repository.",
                "type": "string",
                "enum": [
                  "enabled",
                  "disabled"
                ]
              }
            }
          },
          "secret_scanning": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "enabled",
                  "disabled"
                ]
              }
            }
          },
          "secret_scanning_push_protection": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "enabled",
                  "disabled"
                ]
              }
            }
          },
          "secret_scanning_non_provider_patterns": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "enabled",
                  "disabled"
                ]
              }
            }
          },
          "secret_scanning_ai_detection": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "enabled",
                  "disabled"
                ]
              }
            }
          }
        }
      },
      "minimal-repository": {
        "title": "Minimal Repository",
        "description": "Minimal Repository",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1296269
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
          },
          "name": {
            "type": "string",
            "example": "Hello-World"
          },
          "full_name": {
            "type": "string",
            "example": "octocat/Hello-World"
          },
          "owner": {
            "$ref": "#/components/schemas/simple-user"
          },
          "private": {
            "type": "boolean"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World"
          },
          "description": {
            "type": "string",
            "example": "This your first repo!",
            "nullable": true
          },
          "fork": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World"
          },
          "archive_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
          },
          "assignees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
          },
          "blobs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
          },
          "branches_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
          },
          "collaborators_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
          },
          "comments_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
          },
          "commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
          },
          "compare_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
          },
          "contents_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
          },
          "contributors_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
          },
          "deployments_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
          },
          "downloads_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/events"
          },
          "forks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/forks"
          },
          "git_commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
          },
          "git_refs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
          },
          "git_tags_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
          },
          "git_url": {
            "type": "string"
          },
          "issue_comment_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
          },
          "issue_events_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
          },
          "issues_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
          },
          "keys_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
          },
          "labels_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
          },
          "languages_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/languages"
          },
          "merges_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/merges"
          },
          "milestones_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
          },
          "notifications_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
          },
          "pulls_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
          },
          "releases_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
          },
          "ssh_url": {
            "type": "string"
          },
          "stargazers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
          },
          "statuses_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
          },
          "subscribers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
          },
          "subscription_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
          },
          "tags_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/tags"
          },
          "teams_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/teams"
          },
          "trees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
          },
          "clone_url": {
            "type": "string"
          },
          "mirror_url": {
            "type": "string",
            "nullable": true
          },
          "hooks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
          },
          "svn_url": {
            "type": "string"
          },
          "homepage": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "forks_count": {
            "type": "integer"
          },
          "stargazers_count": {
            "type": "integer"
          },
          "watchers_count": {
            "type": "integer"
          },
          "size": {
            "description": "The size of the repository, in kilobytes. Size is calculated hourly. When a repository is initially created, the size is 0.",
            "type": "integer"
          },
          "default_branch": {
            "type": "string"
          },
          "open_issues_count": {
            "type": "integer"
          },
          "is_template": {
            "type": "boolean"
          },
          "topics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "has_issues": {
            "type": "boolean"
          },
          "has_projects": {
            "type": "boolean"
          },
          "has_wiki": {
            "type": "boolean"
          },
          "has_pages": {
            "type": "boolean"
          },
          "has_downloads": {
            "type": "boolean"
          },
          "has_discussions": {
            "type": "boolean"
          },
          "archived": {
            "type": "boolean"
          },
          "disabled": {
            "type": "boolean"
          },
          "visibility": {
            "type": "string"
          },
          "pushed_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:06:43Z",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:01:12Z",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:14:43Z",
            "nullable": true
          },
          "permissions": {
            "type": "object",
            "properties": {
              "admin": {
                "type": "boolean"
              },
              "maintain": {
                "type": "boolean"
              },
              "push": {
                "type": "boolean"
              },
              "triage": {
                "type": "boolean"
              },
              "pull": {
                "type": "boolean"
              }
            }
          },
          "role_name": {
            "type": "string",
            "example": "admin"
          },
          "temp_clone_token": {
            "type": "string"
          },
          "delete_branch_on_merge": {
            "type": "boolean"
          },
          "subscribers_count": {
            "type": "integer"
          },
          "network_count": {
            "type": "integer"
          },
          "code_of_conduct": {
            "$ref": "#/components/schemas/code-of-conduct"
          },
          "license": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "spdx_id": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "node_id": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "forks": {
            "type": "integer",
            "example": 0
          },
          "open_issues": {
            "type": "integer",
            "example": 0
          },
          "watchers": {
            "type": "integer",
            "example": 0
          },
          "allow_forking": {
            "type": "boolean"
          },
          "web_commit_signoff_required": {
            "type": "boolean",
            "example": false
          },
          "security_and_analysis": {
            "$ref": "#/components/schemas/security-and-analysis"
          },
          "custom_properties": {
            "type": "object",
            "description": "The custom properties that were defined for the repository. The keys are the custom property names, and the values are the corresponding custom property values.",
            "additionalProperties": true
          }
        },
        "required": [
          "archive_url",
          "assignees_url",
          "blobs_url",
          "branches_url",
          "collaborators_url",
          "comments_url",
          "commits_url",
          "compare_url",
          "contents_url",
          "contributors_url",
          "deployments_url",
          "description",
          "downloads_url",
          "events_url",
          "fork",
          "forks_url",
          "full_name",
          "git_commits_url",
          "git_refs_url",
          "git_tags_url",
          "hooks_url",
          "html_url",
          "id",
          "node_id",
          "issue_comment_url",
          "issue_events_url",
          "issues_url",
          "keys_url",
          "labels_url",
          "languages_url",
          "merges_url",
          "milestones_url",
          "name",
          "notifications_url",
          "owner",
          "private",
          "pulls_url",
          "releases_url",
          "stargazers_url",
          "statuses_url",
          "subscribers_url",
          "subscription_url",
          "tags_url",
          "teams_url",
          "trees_url",
          "url"
        ]
      },
      "thread": {
        "title": "Thread",
        "description": "Thread",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "repository": {
            "$ref": "#/components/schemas/minimal-repository"
          },
          "subject": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "latest_comment_url": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "required": [
              "title",
              "url",
              "latest_comment_url",
              "type"
            ]
          },
          "reason": {
            "type": "string"
          },
          "unread": {
            "type": "boolean"
          },
          "updated_at": {
            "type": "string"
          },
          "last_read_at": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string"
          },
          "subscription_url": {
            "type": "string",
            "example": "https://api.github.com/notifications/threads/2/subscription"
          }
        },
        "required": [
          "id",
          "unread",
          "reason",
          "updated_at",
          "last_read_at",
          "subject",
          "repository",
          "url",
          "subscription_url"
        ]
      },
      "thread-subscription": {
        "title": "Thread Subscription",
        "description": "Thread Subscription",
        "type": "object",
        "properties": {
          "subscribed": {
            "type": "boolean",
            "example": true
          },
          "ignored": {
            "type": "boolean"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2012-10-06T21:34:12Z",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/notifications/threads/1/subscription"
          },
          "thread_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/notifications/threads/1"
          },
          "repository_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/1"
          }
        },
        "required": [
          "created_at",
          "ignored",
          "reason",
          "url",
          "subscribed"
        ]
      },
      "organization-simple": {
        "title": "Organization Simple",
        "description": "A GitHub organization.",
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "example": "github"
          },
          "id": {
            "type": "integer",
            "example": 1
          },
          "node_id": {
            "type": "string",
            "example": "MDEyOk9yZ2FuaXphdGlvbjE="
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/orgs/github"
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/orgs/github/repos"
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/orgs/github/events"
          },
          "hooks_url": {
            "type": "string",
            "example": "https://api.github.com/orgs/github/hooks"
          },
          "issues_url": {
            "type": "string",
            "example": "https://api.github.com/orgs/github/issues"
          },
          "members_url": {
            "type": "string",
            "example": "https://api.github.com/orgs/github/members{/member}"
          },
          "public_members_url": {
            "type": "string",
            "example": "https://api.github.com/orgs/github/public_members{/member}"
          },
          "avatar_url": {
            "type": "string",
            "example": "https://github.com/images/error/octocat_happy.gif"
          },
          "description": {
            "type": "string",
            "example": "A great organization",
            "nullable": true
          }
        },
        "required": [
          "login",
          "url",
          "id",
          "node_id",
          "repos_url",
          "events_url",
          "hooks_url",
          "issues_url",
          "members_url",
          "public_members_url",
          "avatar_url",
          "description"
        ]
      },
      "nullable-simple-repository": {
        "title": "Simple Repository",
        "description": "A GitHub repository.",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1296269,
            "description": "A unique identifier of the repository."
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "description": "The GraphQL identifier of the repository."
          },
          "name": {
            "type": "string",
            "example": "Hello-World",
            "description": "The name of the repository."
          },
          "full_name": {
            "type": "string",
            "example": "octocat/Hello-World",
            "description": "The full, globally unique, name of the repository."
          },
          "owner": {
            "$ref": "#/components/schemas/simple-user"
          },
          "private": {
            "type": "boolean",
            "description": "Whether the repository is private."
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World",
            "description": "The URL to view the repository on GitHub.com."
          },
          "description": {
            "type": "string",
            "example": "This your first repo!",
            "nullable": true,
            "description": "The repository description."
          },
          "fork": {
            "type": "boolean",
            "description": "Whether the repository is a fork."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World",
            "description": "The URL to get more information about the repository from the GitHub API."
          },
          "archive_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
            "description": "A template for the API URL to download the repository as an archive."
          },
          "assignees_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
            "description": "A template for the API URL to list the available assignees for issues in the repository."
          },
          "blobs_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
            "description": "A template for the API URL to create or retrieve a raw Git blob in the repository."
          },
          "branches_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
            "description": "A template for the API URL to get information about branches in the repository."
          },
          "collaborators_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
            "description": "A template for the API URL to get information about collaborators of the repository."
          },
          "comments_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
            "description": "A template for the API URL to get information about comments on the repository."
          },
          "commits_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
            "description": "A template for the API URL to get information about commits on the repository."
          },
          "compare_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
            "description": "A template for the API URL to compare two commits or refs."
          },
          "contents_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
            "description": "A template for the API URL to get the contents of the repository."
          },
          "contributors_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/contributors",
            "description": "A template for the API URL to list the contributors to the repository."
          },
          "deployments_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/deployments",
            "description": "The API URL to list the deployments of the repository."
          },
          "downloads_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/downloads",
            "description": "The API URL to list the downloads on the repository."
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/events",
            "description": "The API URL to list the events of the repository."
          },
          "forks_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/forks",
            "description": "The API URL to list the forks of the repository."
          },
          "git_commits_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
            "description": "A template for the API URL to get information about Git commits of the repository."
          },
          "git_refs_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
            "description": "A template for the API URL to get information about Git refs of the repository."
          },
          "git_tags_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
            "description": "A template for the API URL to get information about Git tags of the repository."
          },
          "issue_comment_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
            "description": "A template for the API URL to get information about issue comments on the repository."
          },
          "issue_events_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
            "description": "A template for the API URL to get information about issue events on the repository."
          },
          "issues_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
            "description": "A template for the API URL to get information about issues on the repository."
          },
          "keys_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
            "description": "A template for the API URL to get information about deploy keys on the repository."
          },
          "labels_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
            "description": "A template for the API URL to get information about labels of the repository."
          },
          "languages_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/languages",
            "description": "The API URL to get information about the languages of the repository."
          },
          "merges_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/merges",
            "description": "The API URL to merge branches in the repository."
          },
          "milestones_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
            "description": "A template for the API URL to get information about milestones of the repository."
          },
          "notifications_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
            "description": "A template for the API URL to get information about notifications on the repository."
          },
          "pulls_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
            "description": "A template for the API URL to get information about pull requests on the repository."
          },
          "releases_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
            "description": "A template for the API URL to get information about releases on the repository."
          },
          "stargazers_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/stargazers",
            "description": "The API URL to list the stargazers on the repository."
          },
          "statuses_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
            "description": "A template for the API URL to get information about statuses of a commit."
          },
          "subscribers_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/subscribers",
            "description": "The API URL to list the subscribers on the repository."
          },
          "subscription_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/subscription",
            "description": "The API URL to subscribe to notifications for this repository."
          },
          "tags_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/tags",
            "description": "The API URL to get information about tags on the repository."
          },
          "teams_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/teams",
            "description": "The API URL to list the teams on the repository."
          },
          "trees_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
            "description": "A template for the API URL to create or retrieve a raw Git tree of the repository."
          },
          "hooks_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/hooks",
            "description": "The API URL to list the hooks on the repository."
          }
        },
        "required": [
          "archive_url",
          "assignees_url",
          "blobs_url",
          "branches_url",
          "collaborators_url",
          "comments_url",
          "commits_url",
          "compare_url",
          "contents_url",
          "contributors_url",
          "deployments_url",
          "description",
          "downloads_url",
          "events_url",
          "fork",
          "forks_url",
          "full_name",
          "git_commits_url",
          "git_refs_url",
          "git_tags_url",
          "hooks_url",
          "html_url",
          "id",
          "node_id",
          "issue_comment_url",
          "issue_events_url",
          "issues_url",
          "keys_url",
          "labels_url",
          "languages_url",
          "merges_url",
          "milestones_url",
          "name",
          "notifications_url",
          "owner",
          "private",
          "pulls_url",
          "releases_url",
          "stargazers_url",
          "statuses_url",
          "subscribers_url",
          "subscription_url",
          "tags_url",
          "teams_url",
          "trees_url",
          "url"
        ],
        "nullable": true
      },
      "dependabot-repository-access-details": {
        "title": "Dependabot Repository Access Details",
        "description": "Information about repositories that Dependabot is able to access in an organization",
        "type": "object",
        "properties": {
          "default_level": {
            "type": "string",
            "description": "The default repository access level for Dependabot updates.",
            "enum": [
              "public",
              "internal"
            ],
            "example": "internal",
            "nullable": true
          },
          "accessible_repositories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nullable-simple-repository"
            }
          }
        },
        "additionalProperties": false
      },
      "billing-usage-report": {
        "type": "object",
        "properties": {
          "usageItems": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "description": "Date of the usage line item."
                },
                "product": {
                  "type": "string",
                  "description": "Product name."
                },
                "sku": {
                  "type": "string",
                  "description": "SKU name."
                },
                "quantity": {
                  "type": "integer",
                  "description": "Quantity of the usage line item."
                },
                "unitType": {
                  "type": "string",
                  "description": "Unit type of the usage line item."
                },
                "pricePerUnit": {
                  "type": "number",
                  "description": "Price per unit of the usage line item."
                },
                "grossAmount": {
                  "type": "number",
                  "description": "Gross amount of the usage line item."
                },
                "discountAmount": {
                  "type": "number",
                  "description": "Discount amount of the usage line item."
                },
                "netAmount": {
                  "type": "number",
                  "description": "Net amount of the usage line item."
                },
                "organizationName": {
                  "type": "string",
                  "description": "Name of the organization."
                },
                "repositoryName": {
                  "type": "string",
                  "description": "Name of the repository."
                }
              },
              "required": [
                "date",
                "product",
                "sku",
                "quantity",
                "unitType",
                "pricePerUnit",
                "grossAmount",
                "discountAmount",
                "netAmount",
                "organizationName"
              ]
            }
          }
        }
      },
      "organization-full": {
        "title": "Organization Full",
        "description": "Organization Full",
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "example": "github"
          },
          "id": {
            "type": "integer",
            "example": 1
          },
          "node_id": {
            "type": "string",
            "example": "MDEyOk9yZ2FuaXphdGlvbjE="
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/orgs/github"
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/orgs/github/repos"
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/orgs/github/events"
          },
          "hooks_url": {
            "type": "string",
            "example": "https://api.github.com/orgs/github/hooks"
          },
          "issues_url": {
            "type": "string",
            "example": "https://api.github.com/orgs/github/issues"
          },
          "members_url": {
            "type": "string",
            "example": "https://api.github.com/orgs/github/members{/member}"
          },
          "public_members_url": {
            "type": "string",
            "example": "https://api.github.com/orgs/github/public_members{/member}"
          },
          "avatar_url": {
            "type": "string",
            "example": "https://github.com/images/error/octocat_happy.gif"
          },
          "description": {
            "type": "string",
            "example": "A great organization",
            "nullable": true
          },
          "name": {
            "type": "string",
            "example": "github"
          },
          "company": {
            "type": "string",
            "example": "GitHub"
          },
          "blog": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/blog"
          },
          "location": {
            "type": "string",
            "example": "San Francisco"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "octocat@github.com"
          },
          "twitter_username": {
            "type": "string",
            "example": "github",
            "nullable": true
          },
          "is_verified": {
            "type": "boolean",
            "example": true
          },
          "has_organization_projects": {
            "type": "boolean",
            "example": true
          },
          "has_repository_projects": {
            "type": "boolean",
            "example": true
          },
          "public_repos": {
            "type": "integer",
            "example": 2
          },
          "public_gists": {
            "type": "integer",
            "example": 1
          },
          "followers": {
            "type": "integer",
            "example": 20
          },
          "following": {
            "type": "integer",
            "example": 0
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat"
          },
          "type": {
            "type": "string",
            "example": "Organization"
          },
          "total_private_repos": {
            "type": "integer",
            "example": 100
          },
          "owned_private_repos": {
            "type": "integer",
            "example": 100
          },
          "private_gists": {
            "type": "integer",
            "example": 81,
            "nullable": true
          },
          "disk_usage": {
            "type": "integer",
            "example": 10000,
            "nullable": true
          },
          "collaborators": {
            "type": "integer",
            "example": 8,
            "nullable": true,
            "description": "The number of collaborators on private repositories.\n\nThis field may be null if the number of private repositories is over 50,000."
          },
          "billing_email": {
            "type": "string",
            "format": "email",
            "example": "org@example.com",
            "nullable": true
          },
          "plan": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "space": {
                "type": "integer"
              },
              "private_repos": {
                "type": "integer"
              },
              "filled_seats": {
                "type": "integer"
              },
              "seats": {
                "type": "integer"
              }
            },
            "required": [
              "name",
              "space",
              "private_repos"
            ]
          },
          "default_repository_permission": {
            "type": "string",
            "nullable": true
          },
          "default_repository_branch": {
            "type": "string",
            "example": "main",
            "nullable": true,
            "description": "The default branch for repositories created in this organization."
          },
          "members_can_create_repositories": {
            "type": "boolean",
            "example": true,
            "nullable": true
          },
          "two_factor_requirement_enabled": {
            "type": "boolean",
            "example": true,
            "nullable": true
          },
          "members_allowed_repository_creation_type": {
            "type": "string",
            "example": "all"
          },
          "members_can_create_public_repositories": {
            "type": "boolean",
            "example": true
          },
          "members_can_create_private_repositories": {
            "type": "boolean",
            "example": true
          },
          "members_can_create_internal_repositories": {
            "type": "boolean",
            "example": true
          },
          "members_can_create_pages": {
            "type": "boolean",
            "example": true
          },
          "members_can_create_public_pages": {
            "type": "boolean",
            "example": true
          },
          "members_can_create_private_pages": {
            "type": "boolean",
            "example": true
          },
          "members_can_delete_repositories": {
            "type": "boolean",
            "example": true
          },
          "members_can_change_repo_visibility": {
            "type": "boolean",
            "example": true
          },
          "members_can_invite_outside_collaborators": {
            "type": "boolean",
            "example": true
          },
          "members_can_delete_issues": {
            "type": "boolean",
            "example": true
          },
          "display_commenter_full_name_setting_enabled": {
            "type": "boolean",
            "example": true
          },
          "readers_can_create_discussions": {
            "type": "boolean",
            "example": true
          },
          "members_can_create_teams": {
            "type": "boolean",
            "example": true
          },
          "members_can_view_dependency_insights": {
            "type": "boolean",
            "example": true
          },
          "members_can_fork_private_repositories": {
            "type": "boolean",
            "example": false,
            "nullable": true
          },
          "web_commit_signoff_required": {
            "type": "boolean",
            "example": false
          },
          "advanced_security_enabled_for_new_repositories": {
            "type": "boolean",
            "example": false,
            "description": "**Endpoint closing down notice.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.\n\nWhether GitHub Advanced Security is enabled for new repositories and repositories transferred to this organization.\n\nThis field is only visible to organization owners or members of a team with the security manager role.",
            "deprecated": true
          },
          "dependabot_alerts_enabled_for_new_repositories": {
            "type": "boolean",
            "example": false,
            "description": "**Endpoint closing down notice.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.\n\nWhether Dependabot alerts are automatically enabled for new repositories and repositories transferred to this organization.\n\nThis field is only visible to organization owners or members of a team with the security manager role.",
            "deprecated": true
          },
          "dependabot_security_updates_enabled_for_new_repositories": {
            "type": "boolean",
            "example": false,
            "description": "**Endpoint closing down notice.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.\n\nWhether Dependabot security updates are automatically enabled for new repositories and repositories transferred to this organization.\n\nThis field is only visible to organization owners or members of a team with the security manager role.",
            "deprecated": true
          },
          "dependency_graph_enabled_for_new_repositories": {
            "type": "boolean",
            "example": false,
            "description": "**Endpoint closing down notice.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.\n\nWhether dependency graph is automatically enabled for new repositories and repositories transferred to this organization.\n\nThis field is only visible to organization owners or members of a team with the security manager role.",
            "deprecated": true
          },
          "secret_scanning_enabled_for_new_repositories": {
            "type": "boolean",
            "example": false,
            "description": "**Endpoint closing down notice.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.\n\nWhether secret scanning is automatically enabled for new repositories and repositories transferred to this organization.\n\nThis field is only visible to organization owners or members of a team with the security manager role.",
            "deprecated": true
          },
          "secret_scanning_push_protection_enabled_for_new_repositories": {
            "type": "boolean",
            "example": false,
            "description": "**Endpoint closing down notice.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.\n\nWhether secret scanning push protection is automatically enabled for new repositories and repositories transferred to this organization.\n\nThis field is only visible to organization owners or members of a team with the security manager role.",
            "deprecated": true
          },
          "secret_scanning_push_protection_custom_link_enabled": {
            "type": "boolean",
            "example": false,
            "description": "Whether a custom link is shown to contributors who are blocked from pushing a secret by push protection."
          },
          "secret_scanning_push_protection_custom_link": {
            "type": "string",
            "example": "https://github.com/test-org/test-repo/blob/main/README.md",
            "nullable": true,
            "description": "An optional URL string to display to contributors who are blocked from pushing a secret."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2008-01-14T04:33:35Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deploy_keys_enabled_for_repositories": {
            "type": "boolean",
            "example": false,
            "description": "Controls whether or not deploy keys may be added and used for repositories in the organization."
          }
        },
        "required": [
          "login",
          "url",
          "id",
          "node_id",
          "repos_url",
          "events_url",
          "hooks_url",
          "issues_url",
          "members_url",
          "public_members_url",
          "avatar_url",
          "description",
          "html_url",
          "has_organization_projects",
          "has_repository_projects",
          "public_repos",
          "public_gists",
          "followers",
          "following",
          "type",
          "created_at",
          "updated_at",
          "archived_at"
        ]
      },
      "actions-cache-usage-org-enterprise": {
        "type": "object",
        "properties": {
          "total_active_caches_count": {
            "type": "integer",
            "description": "The count of active caches across all repositories of an enterprise or an organization."
          },
          "total_active_caches_size_in_bytes": {
            "type": "integer",
            "description": "The total size in bytes of all active cache items across all repositories of an enterprise or an organization."
          }
        },
        "required": [
          "total_active_caches_count",
          "total_active_caches_size_in_bytes"
        ]
      }
    }
  }
}